openapi: 3.1.0
info:
  title: CargoSoft API
  description: 
    $ref: ./resources/api_info_description.md
  contact:
    name: Uwe Droste
    url: https://www.cargosoft.de
    email: support@cargosoft.de
  version: '2021.4'
  x-logo:
    backgroundColor: '#FFFFF'
    altText: CargoSoft GmbH
    url: https://raw.githubusercontent.com/cargosoft-gmbh/cargosoft-api-docs/2021.4/resources/CargoSoftLogo.jpg
servers:
- url: https://api-demo.cargosoft.de
  description: Test CargoSoft API server.
tags:
- name: Accounting
  description: CargoSoft Accounting funcionality
- name: Shipment
  description: The following chapter will give you an overview about the shipment
    endpoints and their function.
paths:
  /cargosoft/accounting/invoice:
    post:
      tags:
      - Accounting
      summary: Create record
      description: Create a new record
      operationId: create
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      security:
      - JavaWebToken: []
  /cargosoft/shipment/lookup:
    post:
      tags:
      - Shipment
      summary: Lookup for shipments
      description: This endpoint looks up shipments. The result should be limit by
        using search criterias in the request body. For a complete list of search
        criteria see the ShipmentIdentifier enumeration below. Depending on the search
        criteria you will receive zero up to n shipments.
      operationId: lookup
      parameters:
      - name: page_no
        in: query
        description: The page number for pagination.
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        description: The page size for pagination.
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        description: The order by for ordering API results sending back as response.
        schema:
          type: array
          items:
            type: string
            description: The following list will give an overview about the implemented
              shipment identifier and a short description.
            enum:
            - ID
            - HBL
            - MBL
            - FILENUMBER
            - SHIPMENT_ID
            - ADDRESS_REFERENCE
            - DIRECTION
            - MODE_OF_TRANSPORT
            - MONTH_OF_SERVICE
            - CLIENT
            - CREATION_DATE
            - RUNNING_SEQUENCE_NUMBER
            - CUSTOMER_ADDRESS_TYPE
            - CUSTOMER_ADDRESS_NUMBER
            - SHIPMENT_CLOSED
            title: ShipmentIdentifier
            x-enumDescriptions:
              SHIPMENT_ID: A foreign shipment ID of a third party system. This ID
                should be unique.
              DIRECTION: "Direction of the shipment. Possible values are [I, E]. I\
                \ = import shipments, E = export shipments."
              CREATION_DATE: System date when the shipment was created.
              CUSTOMER_ADDRESS_NUMBER: CargoSoft address number of the customer address.
              FILENUMBER: CargoSoft shipment number. The shipment number is unique
                in combination with the client.
              CLIENT: The CargoSoft client.
              HBL: House bl number of the Shipment.
              MBL: Master bL number of the Shipment.
              ADDRESS_REFERENCE: TBD
              RUNNING_SEQUENCE_NUMBER: TBD
              MONTH_OF_SERVICE: TBD
              CUSTOMER_ADDRESS_TYPE: "CargoSoft address type of the customer address.\
                \ Possible values are [D, K, G, P, A]"
              ID: Unique database ID of the Shipment.
              MODE_OF_TRANSPORT: "The mode of the shipment. Possible values are [SEA,\
                \ AIR, RD, RL]."
              SHIPMENT_CLOSED: "Flag if the shipment is done. Possible values are\
                \ [J, N]."
      - name: order_mode
        in: query
        description: The order mode for ordering API results sending back as response.
        schema:
          type: array
          items:
            type: string
            description: Description of the order mode for ordering API results sending
              back as response
            enum:
            - ASC
            - DESC
            x-enumDescriptions:
              ASC: ascending
              DESC: descending
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ShipmenLookupGenericClass'
            examples:
              LookupShipmentIdentifierExample:
                summary: Example of looking up shipment
                description: TBD
                $ref: ./resources/Lookup_shipment_example.yaml
      responses:
        "200":
          description: Records found
          headers:
            X-Page-Count:
              description: The total number of pages for pagination.
              required: true
              style: simple
              schema: {}
            X-Row-Count:
              description: The total number of found objects for pagination.
              required: true
              style: simple
              schema: {}
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Shipment'
              examples:
                ShipmentExample:
                  summary: Example of a shipment
                  description: TBD
                  $ref: ./resources/Shipment_example_object.yaml
      security:
      - JavaWebToken: []
  /cargosoft/shipment/{id}/airmaincarriage:
    get:
      tags:
      - Shipment - Transport
      - Shipment
      summary: Retrieve airfreight shipment main carriage
      description: 'Retrieve the airfreight main carriage of the shipment with additional
        details. The CargoSoft Shipment ID is needed to retrieve the main carriage. '
      operationId: retrieveAirMainCarriage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AirfreightCarriage'
              examples:
                ShipmentAirfreightCarriageExportExample:
                  summary: Airfreight export carriage example
                  description: This example contains 2 legs for an export airfright
                    shipment.
                  $ref: ./resources/Retrieve_shipment_airfright_carriage_export_example.yaml
                ShipmentAirfreightCarriageImportExample:
                  summary: Airfreight import carriage example
                  description: This example contains only one leg for a import airfright
                    shipment.
                  $ref: ./resources/Retrieve_shipment_airfright_carriage_import_example.yaml
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - JavaWebToken: []
  /cargosoft/shipment/{id}/events:
    get:
      tags:
      - Shipment
      summary: Retrieve shipment events
      description: "This endpoint retrieves all events of the shipment. To retrieve\
        \ the events, the shipment id is needed. It is possible that not all events\
        \ are included in the response because they are not entered or know in the\
        \ shipment unitil now. To retrive the shipment id, use the lookup endpoint\
        \ of this chapter."
      operationId: retrieveEvents
      parameters:
      - name: id
        in: path
        description: The shipment id.
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Records found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ShipmentEvent'
              examples:
                ShipmentEventExample:
                  summary: Example of shipment events
                  description: TBD
                  $ref: ./resources/Retrieve_shipment_events_example.yaml
      security:
      - JavaWebToken: []
  /cargosoft/shipment/{id}/seamaincarriage:
    get:
      tags:
      - Shipment
      summary: Retrieve seafreight shipment main carriage
      description: Retrieve the main carriage of the shipment with additional details.
      operationId: retrieveSeaMainCarriage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SeafreightCarriage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - JavaWebToken: []
  /auth/token:
    post:
      tags:
      - Authorization
      summary: Retrieve JWT
      description: Retrieve a Java Web Token to authenticate against the API
      operationId: retrieveAuthToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Your username
                password:
                  type: string
                  description: Your password
              required:
              - password
              - username
      responses:
        "200":
          description: Java Web Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jwt'
        "401":
          description: Wrong username and/or password
components:
  schemas:
    APIErrorResponse:
      properties:
        error_code:
          $ref: '#/components/schemas/ApiError'
        error_message:
          type: string
        error_source:
          type: string
    ApiError:
      properties:
        errorMessage:
          type: string
    Invoice:
      description: Description of the Invoice DTO Schema
      properties:
        id:
          type: integer
          format: int32
          description: The id of the Invoice
        client:
          type: string
          description: The CargoSoft client
        office:
          type: string
          description: The office
        corporation:
          type: string
        language:
          type: string
        barcode:
          type: string
        currency:
          type: string
        amount:
          type: number
          description: Net amount
        shipment_number:
          type: string
          description: The shipment number of the shipment. This number may unique
            in combination of the client property.
        invoice_type:
          type: string
        invoice_number:
          type: number
        invoice_date:
          type: string
          format: date
        accounting_period:
          type: integer
        invoice_address:
          $ref: '#/components/schemas/PrintedAddress'
        invoice_reference:
          type: string
        exchange_rate:
          type: number
        processed_flag:
          type: string
        tax_amount:
          type: number
        gross_amount:
          type: number
        created_date_time:
          type: string
          format: date-time
        sequential_number:
          type: integer
          format: int32
        employee_login:
          type: string
        collective_invoice:
          type: boolean
        posting_text:
          type: string
        booked:
          type: boolean
        cancelled_invoice:
          type: boolean
        cancelled_invoice_number:
          type: number
        corrected_invoice:
          type: boolean
        corrected_invoice_number:
          type: boolean
        allocation:
          type: string
        paid:
          type: boolean
        payment_condition:
          type: string
        due_date_time:
          type: string
          format: date-time
        service_date:
          type: string
          format: date-time
        cancelled_invoice_reference:
          type: string
    PrintedAddress:
      properties:
        address_type:
          type: string
        address_number:
          type: integer
          format: int32
        line_1:
          type: string
        line_2:
          type: string
        line_3:
          type: string
        line_4:
          type: string
        line_5:
          type: string
    Shipment:
      description: Description of the Shipment DTO schema.
      properties:
        id:
          type: integer
          format: int32
          description: The id of the Shipment.
        client:
          type: string
          description: The CargoSoft client.
        direction:
          type: string
          description: "The shipment direction. Possible values are [I, E]. I = import\
            \ shipments, E = export shipments."
        department:
          type: string
          description: The shipment office.
        numberOfGoods:
          type: integer
          format: int32
        shipment_number:
          type: string
          description: The CargoSoft shipment number of the shipment. This number
            may unique in combination of the client property.
        master_reference:
          type: string
          description: The shipment master bl number.
        house_reference:
          type: string
          description: The shipment house bl number.
        bl_type:
          type: string
          description: Bl type of the shipment.
        mode_of_transport:
          type: string
          description: "Transport mode of the shipment. Possible values are [SEA,\
            \ AIR, RD, RL]"
        month_of_service:
          type: string
          description: TBD.
        total_packages:
          type: integer
          format: int32
          description: The total number of packages of the shipment.
        total_gross_weight:
          type: number
          description: The gross weight if the shipment.
    ContainsIdentifier:
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          value:
            type: string
            description: The value of the identifier.
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      description: This identifier should use when value have to contain.
      title: ContainsIdentifier
    EqualsIdentifier:
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          value:
            type: string
            description: The value of the identifier.
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      description: The equals identifier should use to match the value exactly.
      title: EqualsIdentifier
    GreaterEqualIdentifier:
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          value:
            type: string
            description: The value of the identifier.
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      description: This identifier should use when the value is greater or equals.
      title: GreaterEqualIdentifier
    GreaterThanIdentifier:
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          value:
            type: string
            description: The value of the identifier.
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      description: This identifier should use when the value is greater than.
      title: GreaterThanIdentifier
    Identifier:
      description: Description of the Identifier DTO schema. This DTO contains the
        match mode and identifiers of a functional object for instance the shipment
        identifier.
      discriminator:
        propertyName: matchMode
        mapping:
          EqualsIdentifierMapped: '#/components/schemas/EqualsIdentifier'
          ContainsIdentifierMapped: '#/components/schemas/ContainsIdentifier'
          InIdentifierMapped: '#/components/schemas/InIdentifier'
          OrIdentifierMapped: '#/components/schemas/OrIdentifier'
          GreaterThanIdentifierMapped: '#/components/schemas/GreaterThanIdentifier'
          LessThanIdentifierMapped: '#/components/schemas/LessThanIdentifier'
          GreaterEqualIdentifierMapped: '#/components/schemas/GreaterEqualIdentifier'
          LessEqualIdentifierMapped: '#/components/schemas/LessEqualIdentifier'
      properties:
        key:
          description: Identifier key. For instance a ShipmentIdentifier
        match_mode:
          type: string
          default: EQUALS
          description: The match mode.
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
          x-enumDescriptions:
            OR: Or.
            EQUALS: Equals.
            IN: In.
            LT: Lower than.
            LE: Lower equals
            CONTAINS: Contains
            GT: Greater than.
            GE: Greater equals
    IdentifierLookupIdentifier:
      description: Description of the Identifier DTO schema. This DTO contains the
        match mode and identifiers of a functional object for instance the shipment
        identifier.
      discriminator:
        propertyName: matchMode
        mapping:
          EqualsIdentifierMapped: '#/components/schemas/EqualsIdentifier'
          ContainsIdentifierMapped: '#/components/schemas/ContainsIdentifier'
          InIdentifierMapped: '#/components/schemas/InIdentifier'
          OrIdentifierMapped: '#/components/schemas/OrIdentifier'
          GreaterThanIdentifierMapped: '#/components/schemas/GreaterThanIdentifier'
          LessThanIdentifierMapped: '#/components/schemas/LessThanIdentifier'
          GreaterEqualIdentifierMapped: '#/components/schemas/GreaterEqualIdentifier'
          LessEqualIdentifierMapped: '#/components/schemas/LessEqualIdentifier'
      properties:
        key:
          description: Identifier key. For instance a ShipmentIdentifier
        match_mode:
          type: string
          default: EQUALS
          description: The match mode.
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
          x-enumDescriptions:
            OR: Or.
            EQUALS: Equals.
            IN: In.
            LT: Lower than.
            LE: Lower equals
            CONTAINS: Contains
            GT: Greater than.
            GE: Greater equals
    InIdentifier:
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          values:
            type: array
            description: A list of values of the identifier.
            items:
              type: string
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      description: This identifier should use when more than one value can be match.
      title: InIdentifier
    LessEqualIdentifier:
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          value:
            type: string
            description: The value of the identifier.
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      description: This identifier should use when the value is less or equals.
      title: LessEqualsIdentifier
    LessThanIdentifier:
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          value:
            type: string
            description: The value of the identifier.
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      description: This identifier should use when the value is less than.
      title: LessThanIdentifier
    LookupIdentifier: {}
    OrIdentifier:
      allOf:
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          identifiers:
            type: array
            description: A list of identifier
            items:
              $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      description: This identifier combines a list of identifier with the logical
        or.
      title: OrIdentifier
    ShipmenLookupGenericClass:
      anyOf:
      - $ref: '#/components/schemas/EqualsIdentifier'
      - $ref: '#/components/schemas/InIdentifier'
      - $ref: '#/components/schemas/ContainsIdentifier'
      - $ref: '#/components/schemas/OrIdentifier'
      - $ref: '#/components/schemas/LessThanIdentifier'
      - $ref: '#/components/schemas/LessEqualIdentifier'
      - $ref: '#/components/schemas/GreaterThanIdentifier'
      - $ref: '#/components/schemas/GreaterEqualIdentifier'
      properties:
        key:
          type: string
          description: Identifier key. For instance a ShipmentIdentifier
          enum:
          - ID
          - HBL
          - MBL
          - FILENUMBER
          - SHIPMENT_ID
          - ADDRESS_REFERENCE
          - DIRECTION
          - MODE_OF_TRANSPORT
          - MONTH_OF_SERVICE
          - CLIENT
          - CREATION_DATE
          - RUNNING_SEQUENCE_NUMBER
          - CUSTOMER_ADDRESS_TYPE
          - CUSTOMER_ADDRESS_NUMBER
          - SHIPMENT_CLOSED
          title: ShipmentIdentifier
          x-enumDescriptions:
            SHIPMENT_ID: A foreign shipment ID of a third party system. This ID should
              be unique.
            DIRECTION: "Direction of the shipment. Possible values are [I, E]. I =\
              \ import shipments, E = export shipments."
            CREATION_DATE: System date when the shipment was created.
            CUSTOMER_ADDRESS_NUMBER: CargoSoft address number of the customer address.
            FILENUMBER: CargoSoft shipment number. The shipment number is unique in
              combination with the client.
            CLIENT: The CargoSoft client.
            HBL: House bl number of the Shipment.
            MBL: Master bL number of the Shipment.
            ADDRESS_REFERENCE: TBD
            RUNNING_SEQUENCE_NUMBER: TBD
            MONTH_OF_SERVICE: TBD
            CUSTOMER_ADDRESS_TYPE: "CargoSoft address type of the customer address.\
              \ Possible values are [D, K, G, P, A]"
            ID: Unique database ID of the Shipment.
            MODE_OF_TRANSPORT: "The mode of the shipment. Possible values are [SEA,\
              \ AIR, RD, RL]."
            SHIPMENT_CLOSED: "Flag if the shipment is done. Possible values are [J,\
              \ N]."
        match_mode:
          type: string
          default: EQUALS
          description: The match mode.
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
          x-enumDescriptions:
            OR: Or.
            EQUALS: Equals.
            IN: In.
            LT: Lower than.
            LE: Lower equals
            CONTAINS: Contains
            GT: Greater than.
            GE: Greater equals
    IdentifierListIdentifierShipmentIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    IdentifierShipmentIdentifier:
      description: Description of the Identifier DTO schema. This DTO contains the
        match mode and identifiers of a functional object for instance the shipment
        identifier.
      discriminator:
        propertyName: matchMode
        mapping:
          EqualsIdentifierMapped: '#/components/schemas/EqualsIdentifier'
          ContainsIdentifierMapped: '#/components/schemas/ContainsIdentifier'
          InIdentifierMapped: '#/components/schemas/InIdentifier'
          OrIdentifierMapped: '#/components/schemas/OrIdentifier'
          GreaterThanIdentifierMapped: '#/components/schemas/GreaterThanIdentifier'
          LessThanIdentifierMapped: '#/components/schemas/LessThanIdentifier'
          GreaterEqualIdentifierMapped: '#/components/schemas/GreaterEqualIdentifier'
          LessEqualIdentifierMapped: '#/components/schemas/LessEqualIdentifier'
      properties:
        key:
          type: string
          description: Identifier key. For instance a ShipmentIdentifier
          enum:
          - ID
          - HBL
          - MBL
          - FILENUMBER
          - SHIPMENT_ID
          - ADDRESS_REFERENCE
          - DIRECTION
          - MODE_OF_TRANSPORT
          - MONTH_OF_SERVICE
          - CLIENT
          - CREATION_DATE
          - RUNNING_SEQUENCE_NUMBER
          - CUSTOMER_ADDRESS_TYPE
          - CUSTOMER_ADDRESS_NUMBER
          - SHIPMENT_CLOSED
          title: ShipmentIdentifier
          x-enumDescriptions:
            SHIPMENT_ID: A foreign shipment ID of a third party system. This ID should
              be unique.
            DIRECTION: "Direction of the shipment. Possible values are [I, E]. I =\
              \ import shipments, E = export shipments."
            CREATION_DATE: System date when the shipment was created.
            CUSTOMER_ADDRESS_NUMBER: CargoSoft address number of the customer address.
            FILENUMBER: CargoSoft shipment number. The shipment number is unique in
              combination with the client.
            CLIENT: The CargoSoft client.
            HBL: House bl number of the Shipment.
            MBL: Master bL number of the Shipment.
            ADDRESS_REFERENCE: TBD
            RUNNING_SEQUENCE_NUMBER: TBD
            MONTH_OF_SERVICE: TBD
            CUSTOMER_ADDRESS_TYPE: "CargoSoft address type of the customer address.\
              \ Possible values are [D, K, G, P, A]"
            ID: Unique database ID of the Shipment.
            MODE_OF_TRANSPORT: "The mode of the shipment. Possible values are [SEA,\
              \ AIR, RD, RL]."
            SHIPMENT_CLOSED: "Flag if the shipment is done. Possible values are [J,\
              \ N]."
        match_mode:
          type: string
          default: EQUALS
          description: The match mode.
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
          x-enumDescriptions:
            OR: Or.
            EQUALS: Equals.
            IN: In.
            LT: Lower than.
            LE: Lower equals
            CONTAINS: Contains
            GT: Greater than.
            GE: Greater equals
    AirfreightCarriage:
      allOf:
      - $ref: '#/components/schemas/Carriage'
      - type: object
        properties:
          flight_no:
            type: string
            description: The flight number of this airfreight carriage.
          airline_awb_code:
            type: string
            description: The awb number of this airfreight carriage.
          airline_name:
            type: string
            description: The airline name of this airfreight carriage.
      description: Description of the airfreight carriage DTO schema with several
        airfreight attributes.
    Carriage:
      description: Description of the Carriage DTO schema.
      properties:
        origin:
          $ref: '#/components/schemas/CarriageLeg'
          description: The origin of this leg. This object contains several information
            about the location and its dates and times.
        destination:
          $ref: '#/components/schemas/CarriageLeg'
          description: The destination of this leg. This object contains several information
            about the location and its dates and times.
        leg_no:
          type: integer
          format: int32
          description: The number for the correct order of the transport legs. Important
            if more than one leg is entered for the shipment.
    CarriageLeg:
      description: The carriage leg in detail.
      properties:
        location:
          $ref: '#/components/schemas/Location'
          description: The location of this leg.
        estimated_datetime:
          $ref: '#/components/schemas/DateAndTime'
          description: The local estimated date and time related to the location.
        actual_datetime:
          $ref: '#/components/schemas/DateAndTime'
          description: The local actual date and time related to the location.
    DateAndTime:
      properties:
        date:
          type: string
          format: ISO-8601
          description: The date.
        time:
          format: ISO-8601
          description: The time.
          properties:
            hour:
              type: integer
              format: int32
            minute:
              type: integer
              format: int32
            second:
              type: integer
              format: int32
            nano:
              type: integer
              format: int32
        zone_offset:
          format: ISO-8601
          description: The UTC time zone of this date and time.
          properties:
            totalSeconds:
              type: integer
              format: int32
            id:
              type: string
            rules:
              properties:
                fixedOffset:
                  type: boolean
                transitions:
                  type: array
                  items:
                    properties:
                      offsetBefore:
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      duration:
                        properties:
                          seconds:
                            type: integer
                            format: int64
                          nano:
                            type: integer
                            format: int32
                          negative:
                            type: boolean
                          zero:
                            type: boolean
                          units:
                            type: array
                            items:
                              properties:
                                dateBased:
                                  type: boolean
                                timeBased:
                                  type: boolean
                                durationEstimated:
                                  type: boolean
                      gap:
                        type: boolean
                      dateTimeBefore:
                        type: string
                        format: date-time
                      dateTimeAfter:
                        type: string
                        format: date-time
                      instant:
                        type: string
                        format: date-time
                      overlap:
                        type: boolean
                transitionRules:
                  type: array
                  items:
                    properties:
                      month:
                        type: string
                        enum:
                        - JANUARY
                        - FEBRUARY
                        - MARCH
                        - APRIL
                        - MAY
                        - JUNE
                        - JULY
                        - AUGUST
                        - SEPTEMBER
                        - OCTOBER
                        - NOVEMBER
                        - DECEMBER
                      timeDefinition:
                        type: string
                        enum:
                        - UTC
                        - WALL
                        - STANDARD
                      standardOffset:
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetBefore:
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      dayOfWeek:
                        type: string
                        enum:
                        - MONDAY
                        - TUESDAY
                        - WEDNESDAY
                        - THURSDAY
                        - FRIDAY
                        - SATURDAY
                        - SUNDAY
                      dayOfMonthIndicator:
                        type: integer
                        format: int32
                      localTime:
                        $ref: '#/components/schemas/LocalTime'
                      midnightEndOfDay:
                        type: boolean
    LocalTime:
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    Location:
      description: Description of the Location DTO schema.
      properties:
        codes:
          type: array
          description: A list of all location codes and their types of this location.
          items:
            $ref: '#/components/schemas/LocationCode'
        name:
          type: string
          description: The written name of this location.
        latitude:
          type: number
          description: The latitude of this location.
        longitude:
          type: number
          description: The longitude of this location.
    LocationCode:
      description: Description of the LocationCode DTO schema. Each location in CargoSoft
        can be describe by serveral location types and codes.
      properties:
        type:
          type: string
          description: The type of this location code.
          enum:
          - CARGOSOFT
          - UNLOC
          - IATA
          - FOREIGN
          - POSTAL_CODE
          - UN_COUNTRY
          x-enumDescriptions:
            FOREIGN: Foreign location code of a third party system.
            UNLOC: The location code is an UN location code.
            IATA: The location code is an IATA location code.
            CARGOSOFT: The location code is a CargoSoft internal defined location
              code.
            UN_COUNTRY: The location code is an UN country code.
        code:
          type: string
          description: The code of this location.
      required:
      - code
      - type
    RailCarriage:
      allOf:
      - $ref: '#/components/schemas/Carriage'
    RoadCarriage:
      allOf:
      - $ref: '#/components/schemas/Carriage'
    SeafreightCarriage:
      properties:
        origin:
          $ref: '#/components/schemas/CarriageLeg'
          description: The origin of this leg. This object contains several information
            about the location and its dates and times.
        destination:
          $ref: '#/components/schemas/CarriageLeg'
          description: The destination of this leg. This object contains several information
            about the location and its dates and times.
        leg_no:
          type: integer
          format: int32
          description: The number for the correct order of the transport legs. Important
            if more than one leg is entered for the shipment.
        voyage_no:
          type: string
        imo_code:
          type: string
        vessel_name:
          type: string
        vessel_flag:
          type: string
        call_sign:
          type: string
    ShipmentEvent:
      description: Description of the ShipmentEvent DTO schema.
      properties:
        event:
          type: string
          description: The event code of this shipment event. The code describes the
            functional meaning of the event date and time.
          enum:
          - DISPATCH
          - PICKUP
          - WAREHOUSE
          - POL_ARRIVAL
          - LOADING_START
          - LOADING_END
          - POL_DEPARTURE
          - POD_ARRIVAL
          - CLEARANCE_START
          - CLEARANCE_END
          - CUSTOMS_CLEARANCE
          - AVAILABLE
          - ACCEPTANCE
          - FINAL_DESTINATION
          - TRANSSHIPMENT
          - GATE_OUT
          - POD_DEPARTURE
          - CUSTOMS_RELEASE
          - DELIVERY_DATE
          x-enumDescriptions:
            GATE_OUT: TBD.
            WAREHOUSE: The goods are within the warehouse.
            CLEARANCE_END: The goods are cleared.
            FINAL_DESTINATION: The goods are at the final destination.
            TRANSSHIPMENT: The  goods  are  at  the  transshipment port (seafreight
              only).
            DISPATCH: The goods were dispatched.
            LOADING_START: The goods will be loaded into the vessel / airplane.
            CUSTOMS_RELEASE: TBD.
            LOADING_END: The goods are loaded into the vessel airplane.
            POL_ARRIVAL: The goods arrived the port of loading.
            CUSTOMS_CLEARANCE: The goods are cleared by customs.
            AVAILABLE: The goods are available at the port.
            POD_DEPARTURE: TBD.
            POL_DEPARTURE: The  goods  are  departured  (ETD  and ATD).
            DELIVERY_DATE: TBD.
            POD_ARRIVAL: The goods arrived at the port of discharge (ETA and ATA).
            ACCEPTANCE: The goods can be picked up at the port.
            PICKUP: The  goods  are  picked  up  from  the starting location.
            CLEARANCE_START: The goods will be cleared.
        type:
          type: string
          description: The event type of this shipment event. The event type describes
            if the event date and time is estimated or actual.
          enum:
          - ACTUAL
          - ESTIMATED
          x-enumDescriptions:
            ESTIMATED: Estimated date and time
            ACTUAL: Actual date and time.
        shipment_id:
          type: integer
          format: int32
          description: The id of the Shipment.
        date_time:
          $ref: '#/components/schemas/DateAndTime'
          description: The date and time of this event.
        location:
          $ref: '#/components/schemas/Location'
          description: The location of this event.
    Jwt:
      properties:
        token:
          type: string
  securitySchemes:
    JavaWebToken:
      type: http
      description: 
        $ref: ./resources/api_security_description.md
      scheme: bearer
      bearerFormat: JWT
