openapi: 3.0.1
info:
  title: CargoSoft API Markdown Power 2020.4
  description: |
    Anfang **des** Text
    
    | Syntax      | Description |
    | ----------- | ----------- |
    | Header      | Title       |
    | Paragraph   | Text        |
    | Paragraph   | Text        |
    | Paragraph   | Text        |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    | Paragraph   | 2020.4      |
    
    Noch mehr Text
  x-logo:
    url: 'https://www.cargosoft.de/wp-content/uploads/logo_cargosoft.jpg'
    backgroundColor: '#FFFFFF'
    altText: 'CargoSoft Logo'
  contact:
    name: Uwe Droste der II
    url: https://www.cargosoft.de
    email: support@cargosoft.de
  version: "2020.4"
paths:
  /cargosoft/accounting/invoice:
    get:
      tags:
      - Accounting
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
      security:
      - Java Web Token: []
    post:
      tags:
      - Accounting
      summary: Create record
      description: Create a new record
      operationId: create
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      security:
      - Java Web Token: []
  /cargosoft/accounting/invoice/bulk:
    put:
      tags:
      - Accounting
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Accounting
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Invoice'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Accounting
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/accounting/invoice/{id}:
    get:
      tags:
      - Accounting
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      security:
      - Java Web Token: []
    put:
      tags:
      - Accounting
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Accounting
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      security:
      - Java Web Token: []
  /cargosoft/accounting/invoice/lookup:
    post:
      tags:
      - Accounting
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - INVOICE_NUMBER
            - INVOICE_TYPE
            - SHIPMENT_NUMBER
            - OFFICE
            - FOREIGN_INVOICE_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierInvoiceIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/address:
    get:
      tags:
      - Address
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_1
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
      security:
      - Java Web Token: []
    post:
      tags:
      - Address
      summary: Create record
      description: Create a new record
      operationId: create_1
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/address/bulk:
    put:
      tags:
      - Address
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_1
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Address
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_1
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Address'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Address
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_1
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/address/{id}:
    get:
      tags:
      - Address
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_1
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
      security:
      - Java Web Token: []
    put:
      tags:
      - Address
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_1
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Address
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_1
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/address/lookup:
    post:
      tags:
      - Address
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_1
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - TYPE
            - NUMBER
            - SHORT_NAME
            - NAME
            - GLOBAL_ID
            - CITY
            - CLIENT
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierAddressIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/address/qualifier:
    get:
      tags:
      - Address Qualifier
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_2
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Address Qualifier
      summary: Create record
      description: Create a new record
      operationId: create_2
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressQualifierMapping'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressQualifierMapping'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/address/qualifier/bulk:
    put:
      tags:
      - Address Qualifier
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_2
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Address Qualifier
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_2
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddressQualifierMapping'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Address Qualifier
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_2
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/address/qualifier/{id}:
    get:
      tags:
      - Address Qualifier
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_2
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressQualifierMapping'
      security:
      - Java Web Token: []
    put:
      tags:
      - Address Qualifier
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_2
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressQualifierMapping'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressQualifierMapping'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Address Qualifier
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_2
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressQualifierMapping'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/address/qualifier/lookup:
    post:
      tags:
      - Address Qualifier
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_2
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - MODE_OF_TRANSPORT
            - DIRECTION
            - ADDRESS_LOCATION
            - QUALIFIER
            - NAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierAddressQualifierIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressQualifierMapping'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/codeconverter:
    get:
      tags:
      - Code Conversion
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_3
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeConvertion'
      security:
      - Java Web Token: []
    post:
      tags:
      - Code Conversion
      summary: Create record
      description: Create a new record
      operationId: create_3
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeConvertion'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeConvertion'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/codeconverter/bulk:
    put:
      tags:
      - Code Conversion
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_3
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Code Conversion
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_3
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CodeConvertion'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Code Conversion
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_3
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/codeconverter/{id}:
    get:
      tags:
      - Code Conversion
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_3
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeConvertion'
      security:
      - Java Web Token: []
    put:
      tags:
      - Code Conversion
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_3
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeConvertion'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeConvertion'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Code Conversion
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_3
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeConvertion'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/codeconverter/lookup:
    post:
      tags:
      - Code Conversion
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_3
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - EDIPARTNER
            - DIRECTION
            - CODETYPE
            - SOURCECODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierCodeConverterIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeConvertion'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/country:
    get:
      tags:
      - Country
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_4
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
      security:
      - Java Web Token: []
    post:
      tags:
      - Country
      summary: Create record
      description: Create a new record
      operationId: create_4
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/country/bulk:
    put:
      tags:
      - Country
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_4
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Country
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_4
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Country'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Country
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_4
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/country/{id}:
    get:
      tags:
      - Country
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_4
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
      security:
      - Java Web Token: []
    put:
      tags:
      - Country
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_4
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Country
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_4
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/country/lookup:
    post:
      tags:
      - Country
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_4
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - NAME
            - UN_COUNTRY
            - CUSTOMS_CODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierCountryIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/department:
    get:
      tags:
      - Department
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_5
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
      security:
      - Java Web Token: []
    post:
      tags:
      - Department
      summary: Create record
      description: Create a new record
      operationId: create_5
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/department/bulk:
    put:
      tags:
      - Department
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_5
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Department
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_5
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Department'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Department
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_5
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/department/{id}:
    get:
      tags:
      - Department
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_5
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
      security:
      - Java Web Token: []
    put:
      tags:
      - Department
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_5
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Department
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_5
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/department/lookup:
    post:
      tags:
      - Department
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_5
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - MATCHCODE
            - TYPE
            - NAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierDepartmentIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/documentcategory:
    get:
      tags:
      - Basicdata document
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_6
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentCategory'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata document
      summary: Create record
      description: Create a new record
      operationId: create_6
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCategory'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/documentcategory/bulk:
    put:
      tags:
      - Basicdata document
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_6
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata document
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_6
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DocumentCategory'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata document
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_6
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/documentcategory/{id}:
    get:
      tags:
      - Basicdata document
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_6
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata document
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_6
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata document
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_6
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCategory'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/documentcategory/lookup:
    post:
      tags:
      - Basicdata document
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_6
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - MATCHCODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierDocumentCategoryIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentCategory'
      security:
      - Java Web Token: []
  /cargosoft/efilesettings:
    get:
      tags:
      - Basicdata Efile
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_7
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EFileSettings'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata Efile
      summary: Create record
      description: Create a new record
      operationId: create_7
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EFileSettings'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EFileSettings'
      security:
      - Java Web Token: []
  /cargosoft/efilesettings/bulk:
    put:
      tags:
      - Basicdata Efile
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_7
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata Efile
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_7
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EFileSettings'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata Efile
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_7
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/efilesettings/{id}:
    get:
      tags:
      - Basicdata Efile
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_7
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EFileSettings'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata Efile
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_7
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EFileSettings'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata Efile
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_7
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EFileSettings'
      security:
      - Java Web Token: []
  /cargosoft/efilesettings/lookup:
    post:
      tags:
      - Basicdata Efile
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_7
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierEFileSettingsIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EFileSettings'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/employee:
    get:
      tags:
      - Employee
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_8
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
      security:
      - Java Web Token: []
    post:
      tags:
      - Employee
      summary: Create record
      description: Create a new record
      operationId: create_8
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/employee/bulk:
    put:
      tags:
      - Employee
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_8
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Employee
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_8
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Employee
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_8
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/employee/{id}:
    get:
      tags:
      - Employee
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_8
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
      security:
      - Java Web Token: []
    put:
      tags:
      - Employee
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_8
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Employee
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_8
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/employee/lookup:
    post:
      tags:
      - Employee
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_8
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - LOGIN
            - LAST_NAME
            - SHORT_NAME
            - PHONE_NUMBER
            - MAIL_ADDRESS
            - WINDOWS_LOGIN
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierEmployeeIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/employee/{id}/departments:
    get:
      tags:
      - Employee
      operationId: retrieveDepartmentsWithPermission
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/basicdata/employee/{id}/permission/{permission}:
    get:
      tags:
      - Employee
      operationId: retrieveEmployeePermission
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: permission
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/basicdata/employee/{id}/inboxsettings:
    get:
      tags:
      - Employee
      operationId: retrieveInboxSettingsFromEmploysee
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/basicdata/employee/{id}/themes:
    get:
      tags:
      - Employee
      operationId: retrieveThemesByEmployeeId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permission:
    get:
      tags:
      - Permissions
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_9
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
      security:
      - Java Web Token: []
    post:
      tags:
      - Permissions
      summary: Create record
      description: Create a new record
      operationId: create_9
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permission/bulk:
    put:
      tags:
      - Permissions
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_9
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Permissions
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_9
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Permission'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Permissions
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_9
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permission/{id}:
    get:
      tags:
      - Permissions
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_9
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
      - Java Web Token: []
    put:
      tags:
      - Permissions
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_9
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Permissions
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_9
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permission/lookup:
    post:
      tags:
      - Permissions
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_9
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - PERMISSION_OBJECT
            - PERMISSION_GROUP
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierPermissionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/clientpermission/employee:
    get:
      tags:
      - Employee Client Permissions
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_10
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeClientPermission'
      security:
      - Java Web Token: []
    post:
      tags:
      - Employee Client Permissions
      summary: Create record
      description: Create a new record
      operationId: create_10
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeClientPermission'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeClientPermission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/clientpermission/employee/bulk:
    put:
      tags:
      - Employee Client Permissions
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_10
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Employee Client Permissions
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_10
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeeClientPermission'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Employee Client Permissions
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_10
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/clientpermission/employee/{id}:
    get:
      tags:
      - Employee Client Permissions
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_10
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeClientPermission'
      security:
      - Java Web Token: []
    put:
      tags:
      - Employee Client Permissions
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_10
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeClientPermission'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Employee Client Permissions
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_10
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeClientPermission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/clientpermission/employee/lookup:
    post:
      tags:
      - Employee Client Permissions
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_10
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - LOGIN
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierEmployeeClientPermissionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeClientPermission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permission/employee:
    get:
      tags:
      - User Permissions
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_11
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePermission'
      security:
      - Java Web Token: []
    post:
      tags:
      - User Permissions
      summary: Create record
      description: Create a new record
      operationId: create_11
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePermission'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePermission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permission/employee/bulk:
    put:
      tags:
      - User Permissions
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_11
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - User Permissions
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_11
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EmployeePermission'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - User Permissions
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_11
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permission/employee/{id}:
    get:
      tags:
      - User Permissions
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_11
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePermission'
      security:
      - Java Web Token: []
    put:
      tags:
      - User Permissions
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_11
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePermission'
      security:
      - Java Web Token: []
    delete:
      tags:
      - User Permissions
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_11
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePermission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permission/employee/lookup:
    post:
      tags:
      - User Permissions
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_11
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - LOGIN
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierEmployeePermissionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeePermission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permissiongroup:
    get:
      tags:
      - Permission Groups
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_12
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionGroup'
      security:
      - Java Web Token: []
    post:
      tags:
      - Permission Groups
      summary: Create record
      description: Create a new record
      operationId: create_12
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionGroup'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permissiongroup/bulk:
    put:
      tags:
      - Permission Groups
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_12
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Permission Groups
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_12
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PermissionGroup'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Permission Groups
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_12
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permissiongroup/{id}:
    get:
      tags:
      - Permission Groups
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_12
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
      security:
      - Java Web Token: []
    put:
      tags:
      - Permission Groups
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_12
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Permission Groups
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_12
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGroup'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/permissiongroup/lookup:
    post:
      tags:
      - Permission Groups
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_12
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - PERMISSION_GROUP
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierPermissionGroupIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionGroup'
      security:
      - Java Web Token: []
  /cargosoft/dynamicrule:
    get:
      tags:
      - Basicdata rule
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_13
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DynamicRule'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata rule
      summary: Create record
      description: Create a new record
      operationId: create_13
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicRule'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
      security:
      - Java Web Token: []
  /cargosoft/dynamicrule/bulk:
    put:
      tags:
      - Basicdata rule
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_13
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata rule
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_13
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DynamicRule'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata rule
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_13
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/dynamicrule/{id}:
    get:
      tags:
      - Basicdata rule
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_13
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata rule
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_13
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata rule
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_13
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
      security:
      - Java Web Token: []
  /cargosoft/dynamicrule/lookup:
    post:
      tags:
      - Basicdata rule
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_13
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - TARGET_ENTITY
            - ENTITY
            - SOURCE_ENTITY
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierDynamicRuleIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DynamicRule'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/sequence:
    get:
      tags:
      - Basicdata sequence
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_14
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sequence'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata sequence
      summary: Create record
      description: Create a new record
      operationId: create_14
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sequence'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sequence'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/sequence/bulk:
    put:
      tags:
      - Basicdata sequence
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_14
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata sequence
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_14
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Sequence'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata sequence
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_14
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/sequence/{id}:
    get:
      tags:
      - Basicdata sequence
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_14
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata sequence
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_14
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata sequence
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_14
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sequence'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/sequence/lookup:
    post:
      tags:
      - Basicdata sequence
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_14
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - NAME
            - CLIENT
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierSequenceIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sequence'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/cargosoftsetting:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_15
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_15
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargosoftSetting'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/cargosoftsetting/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_15
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_15
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CargosoftSetting'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_15
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/cargosoftsetting/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_15
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_15
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_15
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/cargosoftsetting/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_15
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - KEY
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierCargosoftSettingIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/shipmentnumberdefinition:
    get:
      tags:
      - Basicdata shipment number definition
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_16
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentNumberDefinition'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata shipment number definition
      summary: Create record
      description: Create a new record
      operationId: create_16
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentNumberDefinition'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentNumberDefinition'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/shipmentnumberdefinition/bulk:
    put:
      tags:
      - Basicdata shipment number definition
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_16
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata shipment number definition
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_16
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentNumberDefinition'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata shipment number definition
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_16
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/shipmentnumberdefinition/{id}:
    get:
      tags:
      - Basicdata shipment number definition
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_16
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentNumberDefinition'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata shipment number definition
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_16
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentNumberDefinition'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata shipment number definition
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_16
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentNumberDefinition'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/shipmentnumberdefinition/lookup:
    post:
      tags:
      - Basicdata shipment number definition
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_16
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - NAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentNumberDefinitionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentNumberDefinition'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/shipmentnumberdefinition/match:
    post:
      tags:
      - Basicdata shipment number definition
      operationId: matchShipmentNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicTypeDTOString'
      responses:
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicTypeDTO'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/addressstatussubscription:
    get:
      tags:
      - Basicdata status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_17
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressStatusSubscription'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create record
      description: Create a new record
      operationId: create_17
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressStatusSubscription'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/addressstatussubscription/bulk:
    put:
      tags:
      - Basicdata status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_17
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_17
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddressStatusSubscription'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_17
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/addressstatussubscription/{id}:
    get:
      tags:
      - Basicdata status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_17
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressStatusSubscription'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_17
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_17
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/addressstatussubscription/lookup:
    post:
      tags:
      - Basicdata status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_17
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ADDRESS_CLIENT
            - ADDRESS_TYPE
            - ADDRESS_NUMBER
            - BASICDATA_CLIENT
            - PROVIDER
            - STATUS_CODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierAddressStatusSubscriptionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressStatusSubscription'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/statuspermission:
    get:
      tags:
      - Basicdata status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_18
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CargosoftStatusPermission'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create record
      description: Create a new record
      operationId: create_18
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargosoftStatusPermission'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargosoftStatusPermission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/statuspermission/bulk:
    put:
      tags:
      - Basicdata status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_18
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_18
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CargosoftStatusPermission'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_18
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/statuspermission/{id}:
    get:
      tags:
      - Basicdata status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_18
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargosoftStatusPermission'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_18
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_18
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargosoftStatusPermission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/statuspermission/lookup:
    post:
      tags:
      - Basicdata status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_18
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - EDIPARTNER
            - CARGOSOFT_STATUS_CODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierCargosoftStatusPermissionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CargosoftStatusPermission'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/cargosoftstatus:
    get:
      tags:
      - Basicdata status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_19
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CargosoftStatus'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create record
      description: Create a new record
      operationId: create_19
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargosoftStatus'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/cargosoftstatus/bulk:
    put:
      tags:
      - Basicdata status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_19
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_19
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CargosoftStatus'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_19
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/cargosoftstatus/{id}:
    get:
      tags:
      - Basicdata status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_19
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargosoftStatus'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_19
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_19
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/cargosoftstatus/lookup:
    post:
      tags:
      - Basicdata status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_19
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - CARGOSOFT_STATUS_CODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierCargosoftStatusIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CargosoftStatus'
      security:
      - Java Web Token: []
  /cargosoft/statusaction:
    get:
      tags:
      - Basicdata status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_20
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderStatusAction'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create record
      description: Create a new record
      operationId: create_20
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderStatusAction'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderStatusAction'
      security:
      - Java Web Token: []
  /cargosoft/statusaction/bulk:
    put:
      tags:
      - Basicdata status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_20
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_20
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderStatusAction'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_20
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusaction/{id}:
    get:
      tags:
      - Basicdata status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_20
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderStatusAction'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_20
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_20
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderStatusAction'
      security:
      - Java Web Token: []
  /cargosoft/statusaction/lookup:
    post:
      tags:
      - Basicdata status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_20
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CARGOSOFT_STATUS_CODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderStatusActionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderStatusAction'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/providerstatus:
    get:
      tags:
      - Basicdata status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_21
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderStatus'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create record
      description: Create a new record
      operationId: create_21
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderStatus'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/providerstatus/bulk:
    put:
      tags:
      - Basicdata status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_21
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basicdata status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_21
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderStatus'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_21
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/providerstatus/{id}:
    get:
      tags:
      - Basicdata status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_21
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderStatus'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basicdata status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_21
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basicdata status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_21
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/basicdata/providerstatus/lookup:
    post:
      tags:
      - Basicdata status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_21
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - PROVIDER
            - STATUS_CODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderStatusIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderStatus'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/mailreceipient:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_22
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_22
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargoComMailReceipient'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/mailreceipient/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_22
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_22
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CargoComMailReceipient'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_22
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/mailreceipient/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_22
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_22
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_22
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/mailreceipient/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_22
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - EMAIL
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierCargoComMailReceipientIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/mail:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_23
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_23
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargoComMail'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/mail/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_23
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_23
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CargoComMail'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_23
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/mail/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_23
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_23
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_23
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/mail/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_23
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - EMPLOYEE_LOGIN
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierCargoComMailIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/task:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_24
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_24
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargoComTask'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/task/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_24
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_24
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CargoComTask'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_24
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/task/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_24
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_24
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_24
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/cargocom/task/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_24
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierCargoComTaskIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/company:
    get:
      tags:
      - Company
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_25
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
      security:
      - Java Web Token: []
    post:
      tags:
      - Company
      summary: Create record
      description: Create a new record
      operationId: create_25
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
      security:
      - Java Web Token: []
  /cargosoft/company/bulk:
    put:
      tags:
      - Company
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_25
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Company
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_25
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Company'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Company
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_25
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/company/{id}:
    get:
      tags:
      - Company
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_25
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
      security:
      - Java Web Token: []
    put:
      tags:
      - Company
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_25
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Company
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_25
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
      security:
      - Java Web Token: []
  /cargosoft/company/lookup:
    post:
      tags:
      - Company
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_25
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierCompanyIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
      security:
      - Java Web Token: []
  /cargosoft/efile:
    get:
      tags:
      - E-File
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_26
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - E-File
      summary: Create record
      description: Create a new record
      operationId: create_26
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EFile'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/efile/bulk:
    put:
      tags:
      - E-File
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_26
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - E-File
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_26
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EFile'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - E-File
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_26
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/efile/{id}/reference:
    get:
      tags:
      - E-File
      operationId: retrieveReferencesFromDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
    post:
      tags:
      - E-File
      operationId: createReferenceForDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EFileReference'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
    delete:
      tags:
      - E-File
      operationId: deleteReferenceFromDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EFileReference'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/efile/{id}/role:
    get:
      tags:
      - E-File
      operationId: retrieveRolesFromDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
    post:
      tags:
      - E-File
      operationId: createRoleForDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
    delete:
      tags:
      - E-File
      operationId: deleteRoleFromDocument
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EFileRole'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/efile/{id}:
    get:
      tags:
      - E-File
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_26
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      tags:
      - E-File
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_26
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - E-File
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_26
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/efile/lookup:
    post:
      tags:
      - E-File
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_26
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - REFERENCE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierEFileIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/emissioncalculation:
    post:
      operationId: retrieveEmissionCalculation
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionCalculationRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/exporttrigger/editrigger:
    get:
      tags:
      - Shipment Trigger
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_28
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentTrigger'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Trigger
      summary: Create record
      description: Create a new record
      operationId: create_28
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentTrigger'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentTrigger'
      security:
      - Java Web Token: []
  /cargosoft/exporttrigger/editrigger/bulk:
    put:
      tags:
      - Shipment Trigger
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_28
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Trigger
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_28
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentTrigger'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Trigger
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_28
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/exporttrigger/editrigger/{id}:
    get:
      tags:
      - Shipment Trigger
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_28
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentTrigger'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment Trigger
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_28
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Trigger
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_28
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentTrigger'
      security:
      - Java Web Token: []
  /cargosoft/exporttrigger/editrigger/lookup:
    post:
      tags:
      - Shipment Trigger
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_28
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - EDIPARTNER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentTriggerIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentTrigger'
      security:
      - Java Web Token: []
  /cargosoft/inbox/global/logo:
    get:
      tags:
      - Inbox
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_27
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Logo'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create record
      description: Create a new record
      operationId: create_27
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logo'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logo'
      security:
      - Java Web Token: []
  /cargosoft/inbox/global/logo/bulk:
    put:
      tags:
      - Inbox
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_27
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_27
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Logo'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_27
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/inbox/global/logo/{id}:
    get:
      tags:
      - Inbox
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_27
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logo'
      security:
      - Java Web Token: []
    put:
      tags:
      - Inbox
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_27
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logo'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logo'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_27
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logo'
      security:
      - Java Web Token: []
  /cargosoft/inbox/global/logo/lookup:
    post:
      tags:
      - Inbox
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_27
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - FILENAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierLogoIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Logo'
      security:
      - Java Web Token: []
  /cargosoft/inbox/global/setting:
    get:
      tags:
      - Inbox
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_29
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GlobalSetting'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create record
      description: Create a new record
      operationId: create_29
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSetting'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSetting'
      security:
      - Java Web Token: []
  /cargosoft/inbox/global/setting/bulk:
    put:
      tags:
      - Inbox
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_29
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_29
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GlobalSetting'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_29
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/inbox/global/setting/{id}:
    get:
      tags:
      - Inbox
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_29
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSetting'
      security:
      - Java Web Token: []
    put:
      tags:
      - Inbox
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_29
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSetting'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSetting'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_29
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSetting'
      security:
      - Java Web Token: []
  /cargosoft/inbox/global/setting/lookup:
    post:
      tags:
      - Inbox
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_29
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - SETUP_KEY
            - SETUP_VALUE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierGlobalSettingIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GlobalSetting'
      security:
      - Java Web Token: []
  /cargosoft/inbox/statistic/login:
    get:
      tags:
      - Inbox
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_30
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Login'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create record
      description: Create a new record
      operationId: create_30
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
      security:
      - Java Web Token: []
  /cargosoft/inbox/statistic/login/bulk:
    put:
      tags:
      - Inbox
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_30
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_30
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_30
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/inbox/statistic/login/{id}:
    get:
      tags:
      - Inbox
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_30
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
      security:
      - Java Web Token: []
    put:
      tags:
      - Inbox
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_30
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_30
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
      security:
      - Java Web Token: []
  /cargosoft/inbox/statistic/login/lookup:
    post:
      tags:
      - Inbox
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_30
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ID
            - LOGIN
            - HOSTNAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierLoginIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Login'
      security:
      - Java Web Token: []
  /cargosoft/inbox/statistic/uselog:
    get:
      tags:
      - Inbox
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_31
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Uselog'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create record
      description: Create a new record
      operationId: create_31
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Uselog'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uselog'
      security:
      - Java Web Token: []
  /cargosoft/inbox/statistic/uselog/bulk:
    put:
      tags:
      - Inbox
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_31
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_31
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Uselog'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_31
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/inbox/statistic/uselog/{id}:
    get:
      tags:
      - Inbox
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_31
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uselog'
      security:
      - Java Web Token: []
    put:
      tags:
      - Inbox
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_31
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Uselog'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uselog'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_31
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uselog'
      security:
      - Java Web Token: []
  /cargosoft/inbox/statistic/uselog/lookup:
    post:
      tags:
      - Inbox
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_31
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - LOGIN
            - UPLOAD_DATE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierUselogIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Uselog'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/setting:
    get:
      tags:
      - Inbox
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_32
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSetting'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create record
      description: Create a new record
      operationId: create_32
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSetting'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSetting'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/setting/bulk:
    put:
      tags:
      - Inbox
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserSetting'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_32
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/setting/{id}:
    get:
      tags:
      - Inbox
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_32
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSetting'
      security:
      - Java Web Token: []
    put:
      tags:
      - Inbox
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_32
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSetting'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSetting'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_32
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSetting'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/setting/lookup:
    post:
      tags:
      - Inbox
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_32
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - SETUP_KEY
            - SETUP_VALUE
            - LOGIN
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierUserSettingIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSetting'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/color:
    get:
      tags:
      - Inbox
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_33
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThemeStyle'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create record
      description: Create a new record
      operationId: create_33
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeStyle'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeStyle'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/color/bulk:
    put:
      tags:
      - Inbox
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_33
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_33
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ThemeStyle'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_33
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/color/{id}:
    get:
      tags:
      - Inbox
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_33
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeStyle'
      security:
      - Java Web Token: []
    put:
      tags:
      - Inbox
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_33
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeStyle'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeStyle'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_33
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeStyle'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/color/lookup:
    post:
      tags:
      - Inbox
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_33
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CSS_KEY
            - THEME_ID
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierThemeStyleIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThemeStyle'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/theme:
    get:
      tags:
      - Inbox
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_34
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Theme'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create record
      description: Create a new record
      operationId: create_34
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/theme/bulk:
    put:
      tags:
      - Inbox
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_34
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Inbox
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_34
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Theme'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_34
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/theme/{id}:
    get:
      tags:
      - Inbox
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_34
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
      security:
      - Java Web Token: []
    put:
      tags:
      - Inbox
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_34
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theme'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Inbox
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_34
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/theme/lookup:
    post:
      tags:
      - Inbox
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_34
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - LOGIN
            - NAME
            - CODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierThemeIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Theme'
      security:
      - Java Web Token: []
  /cargosoft/inbox/user/theme/{id}/colors:
    get:
      tags:
      - Inbox
      operationId: retrieveColorsFromTheme
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThemeStyle'
      security:
      - Java Web Token: []
  /cargosoft/lockedobject:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_35
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_35
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LockedObject'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/lockedobject/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_35
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_35
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LockedObject'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_35
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/lockedobject/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_35
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_35
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_35
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/lockedobject/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_35
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - USERNAME
            - TABLE
            - VALUE_1
            - VALUE_2
            - VALUE_3
            - VALUE_4
            - VALUE_5
            - VALUE_6
            - VALUE_7
            - VALUE_8
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierLockedObjectIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/monitor:
    get:
      tags:
      - EDI Monitor
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_36
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Monitor'
      security:
      - Java Web Token: []
    post:
      tags:
      - EDI Monitor
      summary: Create record
      description: Create a new record
      operationId: create_36
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
      security:
      - Java Web Token: []
  /cargosoft/monitor/bulk:
    put:
      tags:
      - EDI Monitor
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_36
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - EDI Monitor
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_36
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Monitor'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - EDI Monitor
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_36
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/monitor/{id}:
    get:
      tags:
      - EDI Monitor
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_36
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
      security:
      - Java Web Token: []
    put:
      tags:
      - EDI Monitor
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_36
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - EDI Monitor
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_36
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
      security:
      - Java Web Token: []
  /cargosoft/monitor/lookup:
    post:
      tags:
      - EDI Monitor
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_36
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - PROVIDER
            - SHIPMENT_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierMonitorIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Monitor'
      security:
      - Java Web Token: []
  /cargosoft/monitorfile:
    get:
      tags:
      - EDI Monitor
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_37
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitorFile'
      security:
      - Java Web Token: []
    post:
      tags:
      - EDI Monitor
      summary: Create record
      description: Create a new record
      operationId: create_37
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorFile'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorFile'
      security:
      - Java Web Token: []
  /cargosoft/monitorfile/bulk:
    put:
      tags:
      - EDI Monitor
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_37
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - EDI Monitor
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_37
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MonitorFile'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - EDI Monitor
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_37
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/monitorfile/{id}:
    get:
      tags:
      - EDI Monitor
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_37
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorFile'
      security:
      - Java Web Token: []
    put:
      tags:
      - EDI Monitor
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_37
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - EDI Monitor
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_37
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorFile'
      security:
      - Java Web Token: []
  /cargosoft/monitorfile/lookup:
    post:
      tags:
      - EDI Monitor
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_37
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - FILENAME
            - EXTENSION
            - HASHCODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierMonitorFileIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitorFile'
      security:
      - Java Web Token: []
  /cargosoft/monitorlog:
    get:
      tags:
      - EDI Monitor
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_38
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitorLog'
      security:
      - Java Web Token: []
    post:
      tags:
      - EDI Monitor
      summary: Create record
      description: Create a new record
      operationId: create_38
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorLog'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorLog'
      security:
      - Java Web Token: []
  /cargosoft/monitorlog/bulk:
    put:
      tags:
      - EDI Monitor
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_38
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - EDI Monitor
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_38
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MonitorLog'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - EDI Monitor
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_38
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/monitorlog/{id}:
    get:
      tags:
      - EDI Monitor
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_38
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorLog'
      security:
      - Java Web Token: []
    put:
      tags:
      - EDI Monitor
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_38
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - EDI Monitor
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_38
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorLog'
      security:
      - Java Web Token: []
  /cargosoft/monitorlog/lookup:
    post:
      tags:
      - EDI Monitor
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_38
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - MONITOR_ID
            - LOG_CODE
            - LOG_LEVEL
            - SOURCE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierMonitorLogIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonitorLog'
      security:
      - Java Web Token: []
  /cargosoft/provider/oceanbooking:
    get:
      tags:
      - Provider
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_39
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Oceanbooking'
      security:
      - Java Web Token: []
    post:
      tags:
      - Provider
      summary: Create record
      description: Create a new record
      operationId: create_39
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Oceanbooking'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/provider/oceanbooking/bulk:
    put:
      tags:
      - Provider
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_39
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Provider
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_39
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Oceanbooking'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Provider
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_39
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/provider/oceanbooking/{id}:
    get:
      tags:
      - Provider
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_39
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Oceanbooking'
      security:
      - Java Web Token: []
    put:
      tags:
      - Provider
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_39
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Provider
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_39
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/provider/oceanbooking/lookup:
    post:
      tags:
      - Provider
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_39
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - BOOKING_NUMBER
            - CARRIER_BOOKING_NUMBER
            - DAKOSY_NUMBER
            - INTTRA_NUMBER
            - SHIPMENT_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierOceanbookingIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Oceanbooking'
      security:
      - Java Web Token: []
  /cargosoft/provider/statussend:
    get:
      tags:
      - Provider
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_40
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderStatusSend'
      security:
      - Java Web Token: []
    post:
      tags:
      - Provider
      summary: Create record
      description: Create a new record
      operationId: create_40
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderStatusSend'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderStatusSend'
      security:
      - Java Web Token: []
  /cargosoft/provider/statussend/bulk:
    put:
      tags:
      - Provider
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_40
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Provider
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_40
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderStatusSend'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Provider
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_40
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/provider/statussend/{id}:
    get:
      tags:
      - Provider
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_40
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderStatusSend'
      security:
      - Java Web Token: []
    put:
      tags:
      - Provider
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_40
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Provider
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_40
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderStatusSend'
      security:
      - Java Web Token: []
  /cargosoft/provider/statussend/lookup:
    post:
      tags:
      - Provider
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_40
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - EDIPARTNER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderStatusSendIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderStatusSend'
      security:
      - Java Web Token: []
  /cargosoft/qmcard:
    get:
      tags:
      - Basic Data
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_41
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QMCard'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basic Data
      summary: Create record
      description: Create a new record
      operationId: create_41
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QMCard'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QMCard'
      security:
      - Java Web Token: []
  /cargosoft/qmcard/bulk:
    put:
      tags:
      - Basic Data
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_41
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Basic Data
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_41
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/QMCard'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basic Data
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_41
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/qmcard/{id}:
    get:
      tags:
      - Basic Data
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_41
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QMCard'
      security:
      - Java Web Token: []
    put:
      tags:
      - Basic Data
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_41
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QMCard'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QMCard'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Basic Data
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_41
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QMCard'
      security:
      - Java Web Token: []
  /cargosoft/qmcard/lookup:
    post:
      tags:
      - Basic Data
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_41
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - SHIPMENT_NUMBER
            - OFFICE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierQMCardIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QMCard'
      security:
      - Java Web Token: []
  /cargosoft/servicefile:
    get:
      tags:
      - Service File
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_42
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceFile'
      security:
      - Java Web Token: []
    post:
      tags:
      - Service File
      summary: Create record
      description: Create a new record
      operationId: create_42
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceFile'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFile'
      security:
      - Java Web Token: []
  /cargosoft/servicefile/bulk:
    put:
      tags:
      - Service File
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_42
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Service File
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_42
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceFile'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Service File
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_42
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/servicefile/{id}:
    get:
      tags:
      - Service File
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_42
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFile'
      security:
      - Java Web Token: []
    put:
      tags:
      - Service File
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_42
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceFile'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFile'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Service File
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_42
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFile'
      security:
      - Java Web Token: []
  /cargosoft/servicefile/lookup:
    post:
      tags:
      - Service File
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_42
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - SHIPMENT_NUMBER
            - SERVICE_NUMBER
            - EDIPARTNER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierServiceFileIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceFile'
      security:
      - Java Web Token: []
  /cargosoft/shipment:
    get:
      tags:
      - Shipment
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_43
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipment'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment
      summary: Create record
      description: Create a new record
      operationId: create_43
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipment'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
      security:
      - Java Web Token: []
  /cargosoft/shipment/bulk:
    put:
      tags:
      - Shipment
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_43
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_43
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Shipment'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_43
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{id}:
    get:
      tags:
      - Shipment
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_43
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_43
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipment'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_43
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
      security:
      - Java Web Token: []
  /cargosoft/shipment/lookup:
    post:
      tags:
      - Shipment
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_43
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ID
            - HBL
            - MBL
            - FILENUMBER
            - SHIPMENT_ID
            - ADDRESS_REFERENCE
            - DIRECTION
            - MODE_OF_TRANSPORT
            - MONTH_OF_SERVICE
            - CLIENT
            - CREATION_DATE
            - RUNNING_SEQUENCE_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipment'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{id}/addresses:
    get:
      tags:
      - Shipment
      operationId: retrieveAddresses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/shipment/{id}/airmaincarriage:
    get:
      tags:
      - Shipment
      summary: Retrieve airfreight shipment main carriage
      description: Retrieve the main carriage of the shipment with additional details.
      operationId: retrieveAirMainCarriage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AirfreightCarriage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{id}/events:
    get:
      tags:
      - Shipment
      operationId: retrieveEvents
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/shipment/{id}/goods:
    get:
      tags:
      - Shipment
      summary: Retrieve shipment goods
      description: Retrieve all shipment goods
      operationId: retrieveGoods
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Records retrieved
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{id}/invoices:
    get:
      tags:
      - Shipment
      operationId: retrieveInvoices
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/shipment/{id}/qmcards:
    get:
      tags:
      - Shipment
      operationId: retrieveQMCards
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/shipment/{id}/seamaincarriage:
    get:
      tags:
      - Shipment
      summary: Retrieve seafreight shipment main carriage
      description: Retrieve the main carriage of the shipment with additional details.
      operationId: retrieveSeaMainCarriage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SeafreightCarriage'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{id}/servicefiles:
    get:
      tags:
      - Shipment
      operationId: retrieveServiceFiles
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/shipmentaddress/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_44
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ID
            - HBL
            - MBL
            - FILENUMBER
            - SHIPMENT_ID
            - ADDRESS_REFERENCE
            - DIRECTION
            - MODE_OF_TRANSPORT
            - MONTH_OF_SERVICE
            - CLIENT
            - CREATION_DATE
            - RUNNING_SEQUENCE_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{shipmentId}/address/bulk:
    put:
      tags:
      - Shipment Address
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_44
      parameters:
      - name: bl_type
        in: query
        schema:
          type: string
          enum:
          - MASTER
          - HOUSE
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Address
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_44
      parameters:
      - name: bl_type
        in: query
        schema:
          type: string
          enum:
          - MASTER
          - HOUSE
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentAddress'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Address
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_44
      parameters:
      - name: bl_type
        in: query
        schema:
          type: string
          enum:
          - MASTER
          - HOUSE
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                enum:
                - A1
                - A2
                - A3
                - A4
                - A5
                - A6
                - A7
                - A8
                - A9
                - AGT
                - CAR
                - CNE
                - CUS
                - DEL
                - DEP
                - DL1
                - DL2
                - INV
                - MIS
                - NFY
                - PUP
                - SHP
                - TRA
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{shipmentId}/address:
    get:
      tags:
      - Shipment Address
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_44
      parameters:
      - name: bl_type
        in: query
        schema:
          type: string
          enum:
          - MASTER
          - HOUSE
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentAddress'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{shipmentId}/address/{id}:
    get:
      tags:
      - Shipment Address
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_44
      parameters:
      - name: bl_type
        in: query
        schema:
          type: string
          enum:
          - MASTER
          - HOUSE
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: string
          enum:
          - A1
          - A2
          - A3
          - A4
          - A5
          - A6
          - A7
          - A8
          - A9
          - AGT
          - CAR
          - CNE
          - CUS
          - DEL
          - DEP
          - DL1
          - DL2
          - INV
          - MIS
          - NFY
          - PUP
          - SHP
          - TRA
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentAddress'
      security:
      - Java Web Token: []
  /cargosoft/shipment/consolidation:
    get:
      tags:
      - Shipment consolidation
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_45
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentConsolidation'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment consolidation
      summary: Create record
      description: Create a new record
      operationId: create_44
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentConsolidation'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/consolidation/bulk:
    put:
      tags:
      - Shipment consolidation
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_45
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment consolidation
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_45
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentConsolidation'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment consolidation
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_45
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/consolidation/{id}:
    get:
      tags:
      - Shipment consolidation
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_45
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentConsolidation'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment consolidation
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_44
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment consolidation
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_44
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/consolidation/lookup:
    post:
      tags:
      - Shipment consolidation
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_45
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - SHIPMENT_NUMBER_MAIN
            - SHIPMENT_NUMBER_SUB
            - CONTAINER_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentConsolidationIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentConsolidation'
      security:
      - Java Web Token: []
  /cargosoft/truckmanifest/{truckmanifestId}/address:
    get:
      tags:
      - Shipment consolidation
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_46
      parameters:
      - name: truckmanifestId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: pageNo
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentAddress'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment consolidation
      summary: Create record
      description: Create a new record
      operationId: create_45
      parameters:
      - name: truckmanifestId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentAddress'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/truckmanifest/{truckmanifestId}/address/bulk:
    put:
      tags:
      - Shipment consolidation
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_46
      parameters:
      - name: truckmanifestId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment consolidation
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_46
      parameters:
      - name: truckmanifestId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentAddress'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment consolidation
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_46
      parameters:
      - name: truckmanifestId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                enum:
                - A1
                - A2
                - A3
                - A4
                - A5
                - A6
                - A7
                - A8
                - A9
                - AGT
                - CAR
                - CNE
                - CUS
                - DEL
                - DEP
                - DL1
                - DL2
                - INV
                - MIS
                - NFY
                - PUP
                - SHP
                - TRA
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/truckmanifest/{truckmanifestId}/address/{id}:
    get:
      tags:
      - Shipment consolidation
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_46
      parameters:
      - name: truckmanifestId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: string
          enum:
          - A1
          - A2
          - A3
          - A4
          - A5
          - A6
          - A7
          - A8
          - A9
          - AGT
          - CAR
          - CNE
          - CUS
          - DEL
          - DEP
          - DL1
          - DL2
          - INV
          - MIS
          - NFY
          - PUP
          - SHP
          - TRA
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentAddress'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment consolidation
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_45
      parameters:
      - name: truckmanifestId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: string
          enum:
          - A1
          - A2
          - A3
          - A4
          - A5
          - A6
          - A7
          - A8
          - A9
          - AGT
          - CAR
          - CNE
          - CUS
          - DEL
          - DEP
          - DL1
          - DL2
          - INV
          - MIS
          - NFY
          - PUP
          - SHP
          - TRA
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment consolidation
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_45
      parameters:
      - name: truckmanifestId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: string
          enum:
          - A1
          - A2
          - A3
          - A4
          - A5
          - A6
          - A7
          - A8
          - A9
          - AGT
          - CAR
          - CNE
          - CUS
          - DEL
          - DEP
          - DL1
          - DL2
          - INV
          - MIS
          - NFY
          - PUP
          - SHP
          - TRA
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/truckmanifest:
    get:
      tags:
      - Shipment consolidation
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_47
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruckManifest'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment consolidation
      summary: Create record
      description: Create a new record
      operationId: create_46
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TruckManifest'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/truckmanifest/bulk:
    put:
      tags:
      - Shipment consolidation
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_47
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment consolidation
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_47
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TruckManifest'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment consolidation
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_47
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/truckmanifest/{id}:
    get:
      tags:
      - Shipment consolidation
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_47
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruckManifest'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment consolidation
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_46
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment consolidation
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_46
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/truckmanifest/lookup:
    post:
      tags:
      - Shipment consolidation
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_46
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - MANIFEST_NUMBER
            - CLIENT
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierTruckManifestIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TruckManifest'
      security:
      - Java Web Token: []
  /cargosoft/shipmentevent/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_47
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ID
            - HBL
            - MBL
            - FILENUMBER
            - SHIPMENT_ID
            - ADDRESS_REFERENCE
            - DIRECTION
            - MODE_OF_TRANSPORT
            - MONTH_OF_SERVICE
            - CLIENT
            - CREATION_DATE
            - RUNNING_SEQUENCE_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{shipmentId}/event/bulk:
    put:
      tags:
      - Shipment Events
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_48
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        schema:
          type: string
          enum:
          - ACTUAL
          - ESTIMATED
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Events
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_48
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        schema:
          type: string
          enum:
          - ACTUAL
          - ESTIMATED
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentEvent'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Events
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_48
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        schema:
          type: string
          enum:
          - ACTUAL
          - ESTIMATED
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                enum:
                - DISPATCH
                - PICKUP
                - WAREHOUSE
                - POL_ARRIVAL
                - LOADING_START
                - LOADING_END
                - POL_DEPARTURE
                - POD_ARRIVAL
                - CLEARANCE_START
                - CLEARANCE_END
                - CUSTOMS_CLEARANCE
                - AVAILABLE
                - ACCEPTANCE
                - FINAL_DESTINATION
                - TRANSSHIPMENT
                - GATE_OUT
                - POD_DEPARTURE
                - CUSTOMS_RELEASE
                - DELIVERY_DATE
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{shipmentId}/event:
    get:
      tags:
      - Shipment Events
      description: |-
        | Possible Types (?type=...) |
        |--------------------|
        | ACTUAL|
        | ESTIMATED                |
      operationId: retrieveAll_48
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        schema:
          type: string
          enum:
          - ACTUAL
          - ESTIMATED
      responses:
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentEvent'
      security:
      - Java Web Token: []
  /cargosoft/shipment/{shipmentId}/event/{id}:
    get:
      tags:
      - Shipment Events
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_48
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: type
        in: query
        schema:
          type: string
          enum:
          - ACTUAL
          - ESTIMATED
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: string
          enum:
          - DISPATCH
          - PICKUP
          - WAREHOUSE
          - POL_ARRIVAL
          - LOADING_START
          - LOADING_END
          - POL_DEPARTURE
          - POD_ARRIVAL
          - CLEARANCE_START
          - CLEARANCE_END
          - CUSTOMS_CLEARANCE
          - AVAILABLE
          - ACCEPTANCE
          - FINAL_DESTINATION
          - TRANSSHIPMENT
          - GATE_OUT
          - POD_DEPARTURE
          - CUSTOMS_RELEASE
          - DELIVERY_DATE
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentEvent'
      security:
      - Java Web Token: []
  /cargosoft/container:
    get:
      tags:
      - Shipment goods description
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_49
      parameters:
      - name: pageNo
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment goods description
      summary: Create record
      description: Create a new record
      operationId: create_47
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Container'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/container/bulk:
    put:
      tags:
      - Shipment goods description
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_49
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment goods description
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_49
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Container'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment goods description
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_49
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/container/{id}:
    get:
      tags:
      - Shipment goods description
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_49
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Container'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment goods description
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_47
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment goods description
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_47
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/container/lookup:
    post:
      tags:
      - Shipment goods description
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_48
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - SHIPMENT_NUMBER
            - CONTAINER_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierContainerIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Container'
      security:
      - Java Web Token: []
  /cargosoft/good:
    get:
      tags:
      - Shipment goods description
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_50
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Good'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment goods description
      summary: Create record
      description: Create a new record
      operationId: create_48
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Good'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/good/bulk:
    put:
      tags:
      - Shipment goods description
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_50
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment goods description
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_50
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Good'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment goods description
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_50
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/good/{id}:
    get:
      tags:
      - Shipment goods description
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_50
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Good'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment goods description
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_48
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment goods description
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_48
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/good/lookup:
    post:
      tags:
      - Shipment goods description
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_49
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - SHIPMENT_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierGoodIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Good'
      security:
      - Java Web Token: []
  /cargosoft/status:
    get:
      tags:
      - Shipment Status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_51
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentStatus'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create record
      description: Create a new record
      operationId: create_49
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentStatus'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentStatus'
      security:
      - Java Web Token: []
  /cargosoft/status/bulk:
    put:
      tags:
      - Shipment Status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_51
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_51
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentStatus'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_51
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/status/{id}:
    get:
      tags:
      - Shipment Status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_51
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentStatus'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment Status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_49
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_49
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/status/lookup:
    post:
      tags:
      - Shipment Status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_50
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CONTAINER_NUMBER
            - SHIPMENT_NUMBER
            - CLIENT
            - CARGOSOFT_STATUS_CODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentStatusIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentStatus'
      security:
      - Java Web Token: []
  /cargosoft/providerstatuslink:
    get:
      tags:
      - Shipment Status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_52
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentProviderStatusLink'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create record
      description: Create a new record
      operationId: create_50
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentProviderStatusLink'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/providerstatuslink/bulk:
    put:
      tags:
      - Shipment Status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_52
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_52
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentProviderStatusLink'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_52
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/providerstatuslink/{id}:
    get:
      tags:
      - Shipment Status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_52
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentProviderStatusLink'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment Status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_50
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_50
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/providerstatuslink/lookup:
    post:
      tags:
      - Shipment Status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_51
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - SHIPMENT_PROVIDER_STATUS_ID
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentProviderStatusLinkIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentProviderStatusLink'
      security:
      - Java Web Token: []
  /cargosoft/providerstatusreference:
    get:
      tags:
      - Shipment Status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_53
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentProviderStatusReference'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create record
      description: Create a new record
      operationId: create_51
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentProviderStatusReference'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/providerstatusreference/bulk:
    put:
      tags:
      - Shipment Status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_53
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_53
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentProviderStatusReference'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_53
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/providerstatusreference/{id}:
    get:
      tags:
      - Shipment Status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_53
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentProviderStatusReference'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment Status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_51
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_51
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/providerstatusreference/lookup:
    post:
      tags:
      - Shipment Status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_52
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - SHIPMENT_PROVIDER_STATUS_ID
            - REFERENCE_TYPE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentProviderStatusReferenceIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentProviderStatusReference'
      security:
      - Java Web Token: []
  /cargosoft/providerstatus:
    get:
      tags:
      - Shipment Status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_54
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentProviderStatus'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create record
      description: Create a new record
      operationId: create_52
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentProviderStatus'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/providerstatus/bulk:
    put:
      tags:
      - Shipment Status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_54
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_54
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentProviderStatus'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_54
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/providerstatus/{id}:
    get:
      tags:
      - Shipment Status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_54
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentProviderStatus'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment Status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_52
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_52
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/providerstatus/lookup:
    post:
      tags:
      - Shipment Status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_53
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - SHIPMENT_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentProviderStatusIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentProviderStatus'
      security:
      - Java Web Token: []
  /cargosoft/statusrequest:
    get:
      tags:
      - Shipment Status
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_55
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentStatusRequest'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create record
      description: Create a new record
      operationId: create_53
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentStatusRequest'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentStatusRequest'
      security:
      - Java Web Token: []
  /cargosoft/statusrequest/bulk:
    put:
      tags:
      - Shipment Status
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_55
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Shipment Status
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_55
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ShipmentStatusRequest'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_55
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusrequest/{id}:
    get:
      tags:
      - Shipment Status
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_55
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentStatusRequest'
      security:
      - Java Web Token: []
    put:
      tags:
      - Shipment Status
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_53
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Shipment Status
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_53
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusrequest/lookup:
    post:
      tags:
      - Shipment Status
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_54
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - EDI_PARTNER
            - SHIPMENT_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierShipmentStatusRequestIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentStatusRequest'
      security:
      - Java Web Token: []
  /cargosoft/statuscreate:
    post:
      operationId: create_54
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderResponseStatus'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/tenderoffer:
    get:
      tags:
      - Tender Offer
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_56
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderOffer'
      security:
      - Java Web Token: []
    post:
      tags:
      - Tender Offer
      summary: Create record
      description: Create a new record
      operationId: create_55
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenderOffer'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenderOffer'
      security:
      - Java Web Token: []
  /cargosoft/tenderoffer/bulk:
    put:
      tags:
      - Tender Offer
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_56
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Tender Offer
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_56
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TenderOffer'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Tender Offer
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_56
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/tenderoffer/{id}:
    get:
      tags:
      - Tender Offer
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_56
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenderOffer'
      security:
      - Java Web Token: []
    put:
      tags:
      - Tender Offer
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_54
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenderOffer'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenderOffer'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Tender Offer
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_54
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenderOffer'
      security:
      - Java Web Token: []
  /cargosoft/tenderoffer/lookup:
    post:
      tags:
      - Tender Offer
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_55
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CLIENT
            - ADDRESS_TYPE
            - ADDRESS_NUMBER
            - YEAR
            - SEQUENTIAL_NUMBER
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierTenderOfferIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TenderOffer'
      security:
      - Java Web Token: []
  /admin/cleanup:
    get:
      operationId: cleanup
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/healthcheck:
    get:
      operationId: retrieveHealthcheck
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /auth/token:
    post:
      tags:
      - Authorization
      summary: Retrieve JWT
      description: Retrieve a Java Web Token to authenticate against the API
      operationId: retrieveAuthToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - password
              - username
              type: object
              properties:
                username:
                  type: string
                  description: Your username
                password:
                  type: string
                  description: Your password
      responses:
        "200":
          description: Java Web Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jwt'
        "401":
          description: Wrong username and/or password
  /admin/blob:
    get:
      tags:
      - Administration - Blob
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_57
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Administration - Blob
      summary: Create record
      description: Create a new record
      operationId: create_56
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blob'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/blob/bulk:
    put:
      tags:
      - Administration - Blob
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_57
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Administration - Blob
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_57
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Blob'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Administration - Blob
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_57
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/blob/{id}:
    get:
      tags:
      - Administration - Blob
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_57
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      tags:
      - Administration - Blob
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_55
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Administration - Blob
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_55
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/permissiongroup/{permissiongroupId}/permission/{permissionId}:
    post:
      operationId: addPermissionToGroup
      parameters:
      - name: permissiongroupId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: permissionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
    delete:
      operationId: removePermissionFromGroup
      parameters:
      - name: permissiongroupId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: permissionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/permissiongroup:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_58
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_57
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPermissionGroup'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/permissiongroup/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_58
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_58
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApiPermissionGroup'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_58
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/permissiongroup/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_58
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_56
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_56
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/permissiongroup/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_56
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - NAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierApiPermissionGroupIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/permissiongroup/{permissiongroupId}/permissions:
    get:
      operationId: retrievePermissionsFromGroup
      parameters:
      - name: permissiongroupId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/permission:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_59
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_58
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPermission'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/permission/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_59
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_59
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApiPermission'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_59
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/permission/initialize:
    post:
      operationId: createPermissions
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/permission/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_59
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_57
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_57
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/permission/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_57
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - HTTP_METHOD
            - RESOURCE_PATH
            - JAVA_METHOD
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierApiPermissionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/request/bulk:
    put:
      tags:
      - Administration - REST requests
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_60
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Administration - REST requests
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_60
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApiRequest'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Administration - REST requests
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_60
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/request/lookup:
    post:
      tags:
      - Administration - REST requests
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_58
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - USER
            - PATH
            - METHOD
            - REQUEST_DATETIME
            - FAMILY
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierApiRequestIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/request:
    get:
      tags:
      - Administration - REST requests
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_60
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/request/{id}:
    get:
      tags:
      - Administration - REST requests
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_60
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/response/bulk:
    put:
      tags:
      - Administration - REST responses
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_61
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Administration - REST responses
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_61
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApiResponse'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - Administration - REST responses
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_61
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/response/lookup:
    post:
      tags:
      - Administration - REST responses
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_59
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CODE
            - FAMILY
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierApiResponseIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/response:
    get:
      tags:
      - Administration - REST responses
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_61
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/response/{id}:
    get:
      tags:
      - Administration - REST responses
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_61
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/role/{roleId}/user/{userId}:
    post:
      tags:
      - API Administration
      operationId: addUserToRole
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
    delete:
      tags:
      - API Administration
      operationId: removeUserFromRole
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/role:
    get:
      tags:
      - API Administration
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_62
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      security:
      - Java Web Token: []
    post:
      tags:
      - API Administration
      summary: Create record
      description: Create a new record
      operationId: create_59
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - Java Web Token: []
  /admin/role/bulk:
    put:
      tags:
      - API Administration
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_62
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - API Administration
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_62
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Role'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - API Administration
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_62
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/role/{id}:
    get:
      tags:
      - API Administration
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_62
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - Java Web Token: []
    put:
      tags:
      - API Administration
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_58
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - Java Web Token: []
    delete:
      tags:
      - API Administration
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_58
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - Java Web Token: []
  /admin/role/lookup:
    post:
      tags:
      - API Administration
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_60
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - NAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierRoleIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      security:
      - Java Web Token: []
  /admin/role/{roleId}/user:
    get:
      tags:
      - API Administration
      operationId: retrieveUsersFromRole
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/user/{userId}/role/{roleId}:
    post:
      tags:
      - API Administration
      operationId: addGroupToUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
    delete:
      tags:
      - API Administration
      operationId: removeGroupFromUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/user:
    get:
      tags:
      - API Administration
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_63
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
      - Java Web Token: []
    post:
      tags:
      - API Administration
      summary: Create record
      description: Create a new record
      operationId: create_60
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - Java Web Token: []
  /admin/user/bulk:
    put:
      tags:
      - API Administration
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_63
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - API Administration
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_63
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      tags:
      - API Administration
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_63
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/user/{userId}/permissiongroup/{permissionGroupId}:
    post:
      tags:
      - API Administration
      operationId: createPermissionGroupForUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: permissionGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
    delete:
      tags:
      - API Administration
      operationId: deletePermissionGroupFromUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: permissionGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/user/{id}:
    get:
      tags:
      - API Administration
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_63
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - Java Web Token: []
    put:
      tags:
      - API Administration
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_59
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - Java Web Token: []
    delete:
      tags:
      - API Administration
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_59
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - Java Web Token: []
  /admin/user/lookup:
    post:
      tags:
      - API Administration
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_61
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - USERNAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierUserIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
      - Java Web Token: []
  /admin/user/{userId}/permissiongroup:
    put:
      tags:
      - API Administration
      operationId: mergePermissionGroups
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApiPermissionGroup'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/user/{userId}/role:
    put:
      tags:
      - API Administration
      operationId: mergeRoles
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Role'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/user/{userId}/permissiongroups:
    get:
      tags:
      - API Administration
      operationId: retrievePermissionGroupsFromUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiPermissionGroup'
      security:
      - Java Web Token: []
  /admin/user/{id}/roles:
    get:
      tags:
      - API Administration
      operationId: retrieveRolesFromUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /admin/webhookconfig:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_64
      parameters:
      - name: pageNo
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_61
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookConfig'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/webhookconfig/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_64
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebhookConfig'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_64
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/webhookconfig/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_64
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_60
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_60
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /admin/webhookconfig/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_62
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ID
            - USER_ID
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierWebhookConfigIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /mail:
    post:
      operationId: sendMail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerforeigncode:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_65
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_62
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderForeignCode'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerforeigncode/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_65
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_65
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderForeignCode'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_65
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerforeigncode/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_65
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_61
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_61
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerforeigncode/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_63
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CODE_TYPE
            - CS_CODE
            - FOREIGN_CODE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierForeignCodeIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/provider:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_66
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_63
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Provider'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/provider/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_66
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_66
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Provider'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_66
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/provider/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_66
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_62
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_62
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/provider/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_64
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - NAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/subscription/{id}:
    get:
      tags:
      - Status Subscription
      summary: Retrieve single subscription
      description: Retrieve information for a single subscriptions.
      operationId: retrieveById_67
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInformation'
        "204":
          description: Subscription not found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_63
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      operationId: addToExistingSubscription
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
    delete:
      tags:
      - Status Subscription
      summary: Unsubscribe subscription
      description: Unsubscribe from a existing subscription.
      operationId: delete_63
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Unsubscribed
          content:
            application/json: {}
        "204":
          description: Subscription not found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/subscription:
    get:
      tags:
      - Status Subscription
      summary: Retrieve all subscriptions
      description: Retrieve informations for all subscriptions.
      operationId: retrieveAll_67
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInformation'
        "201":
          description: No subscription found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      tags:
      - Status Subscription
      summary: Create new subscription
      description: Create a new subscription.
      operationId: create_64
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      requestBody:
        description: "Informations, needed for a new Subscription"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      responses:
        "200":
          description: Subscription created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        "201":
          description: Subscription created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/subscription/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_67
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_67
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionRequest'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_67
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/subscription/{subscriptionId}/status:
    get:
      operationId: retrieveStatusFromSubscription
      parameters:
      - name: x-UUID
        in: header
        schema:
          type: string
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /external/webhook/createfile:
    post:
      operationId: receiveFile
      parameters:
      - name: x-WEBHOOKUSER
        in: header
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /external/webhook:
    post:
      tags:
      - Status Subscription
      summary: Provide a webhook response
      description: "Provide a new response for a existing subscription, which will\
        \ be delivered to all subscribers."
      operationId: receiveWebhookRequest
      parameters:
      - name: x-WEBHOOKUSER
        in: header
        schema:
          type: string
      requestBody:
        description: File passed by the status provider
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerconfigadditional:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_68
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_65
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderConfigAdditional'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerconfigadditional/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_68
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_68
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderConfigAdditional'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_68
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerconfigadditional/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_68
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_64
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_64
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerconfigadditional/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_65
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - KEY
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderConfigAdditionalIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerconfig:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_69
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_66
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderConfig'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerconfig/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_69
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_69
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderConfig'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_69
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerconfig/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_69
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_65
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_65
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerconfig/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_66
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - NAME
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderConfigIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/provideridentifiermatch:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_70
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_67
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderRequestMatchIdentifier'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/provideridentifiermatch/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_70
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_70
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderRequestMatchIdentifier'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_70
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/provideridentifiermatch/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_70
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_66
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_66
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/provideridentifiermatch/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_67
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            $ref: '#/components/schemas/LookupIdentifier'
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierLookupIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/migration/{id}:
    post:
      operationId: migrate
      parameters:
      - name: id
        in: path
        description: Database id of the CargoSoft tms status request record you want
          to migrate
        required: true
        schema:
          type: integer
          format: int32
      - name: providerconfig
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerrequest:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_71
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_68
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderRequest'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerrequest/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_71
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_71
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderRequest'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_71
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerrequest/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_71
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_67
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_67
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerrequest/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_68
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ID
            - REQUEST_DATETIME
            - PROVIDER_SUBSCRIPTION_ID
            - PROVIDER_CONFIG_ID
            - RESPONSE_FAMILY
            - RESPONSE_CODE
            - PROVIDER_REQUEST_FUNCTION
            - USER_SUBSCRIPTION_REQUEST_ID
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderRequestIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponse:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_72
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_69
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderResponse'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponse/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_72
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_72
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderResponse'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_72
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponse/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_72
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_68
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_68
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponse/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_69
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ID
            - SUBSCRIPTION_ID
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderResponseIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponse/{responseId}/reprocess:
    post:
      operationId: reprocessProviderResponse
      parameters:
      - name: responseId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponse/{responseId}/reprocess/{subscriptionId}:
    post:
      operationId: reprocessProviderResponseForSubscription
      parameters:
      - name: responseId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponsestatus:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_73
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_70
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderResponseStatus'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponsestatus/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_73
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_73
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderResponseStatus'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_73
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponsestatus/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_73
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_69
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_69
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponsestatus/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_70
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - CARGOSOFT_STATUS
            - PROVIDER_STATUS
            - PROVIDER_RESPONSE_ID
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderResponseStatusIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providerresponsestatus/{responseStatusId}/reprocess/{userSubscriptionId}:
    post:
      operationId: reprocessProviderResponseStatusForSubscription
      parameters:
      - name: responseStatusId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: userSubscriptionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providersubscription:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_74
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_71
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderSubscription'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providersubscription/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_74
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_74
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderSubscription'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_74
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providersubscription/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_74
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_70
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_70
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/providersubscription/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_71
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ID
            - CANCELED
            - SUBSCRIPTION_DATETIME
            - PROVIDER_REFERENCE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderSubscriptionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/usersubscription:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_75
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_72
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSubscription'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/usersubscription/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_75
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_75
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserSubscription'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_75
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/usersubscription/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_75
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_71
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_71
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/usersubscription/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_72
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ID
            - WEBHOOK_URL
            - ACTIVE
            - TMS_OBJECT_ID
            - PROVIDER_SUBSCRIPTION_ID
            - USER_ID
            - IDENTIFIER_KEY
            - IDENTIFIER_VALUE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierUserSubscriptionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/transaction:
    get:
      summary: Retrieve all records
      description: 'Scroll through all existing records. '
      operationId: retrieveAll_76
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create record
      description: Create a new record
      operationId: create_73
      requestBody:
        description: Model of the record you want to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderTransaction'
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/transaction/bulk:
    put:
      summary: Update multiple records
      description: Update multiple records
      operationId: updateBulk_76
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
      responses:
        "200":
          description: Record updated
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    post:
      summary: Create multiple records
      description: Create multiple new records
      operationId: createBulk_76
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProviderTransaction'
      responses:
        "200":
          description: Record created
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete multiple records
      description: Delete multiple new records
      operationId: deleteBulk_76
      requestBody:
        description: Database ids of the records you want to remove
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        "200":
          description: Record deleted
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/transaction/{id}:
    get:
      summary: Retrieve record
      description: Find a existing record by it's database id
      operationId: retrieveById_76
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to retrieve
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    put:
      summary: Update record
      description: Update a existing record by it's database id
      operationId: update_72
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to update.
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
    delete:
      summary: Delete record
      description: Delete a record by it's database id
      operationId: delete_72
      parameters:
      - name: id
        in: path
        description: Database id of the record you want to remove
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No record found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/transaction/lookup:
    post:
      summary: Lookup record
      description: Find a existing record by given identifiers
      operationId: lookup_73
      parameters:
      - name: page_no
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - PROVIDER_CONFIG_ID
            - TRANSACTION_DATE
      - name: order_mode
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - ASC
            - DESC
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
      responses:
        "204":
          description: No records found
          content:
            application/json: {}
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
      security:
      - Java Web Token: []
  /cargosoft/statusapi/transaction/year/{year}/month/{month}:
    get:
      operationId: retrieveByYearAndMonth
      parameters:
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: month
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        default:
          description: default response
          content:
            application/json: {}
      security:
      - Java Web Token: []
components:
  schemas:
    APIErrorResponse:
      type: object
      properties:
        error_code:
          $ref: '#/components/schemas/ApiError'
        error_message:
          type: string
        error_source:
          type: string
    ApiError:
      type: object
      properties:
        errorMessage:
          type: string
    Invoice:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        office:
          type: string
        corporation:
          type: string
        language:
          type: string
        barcode:
          type: string
        currency:
          type: string
        amount:
          type: number
        shipment_number:
          type: string
        invoice_type:
          type: string
        invoice_number:
          type: number
        voucher_type:
          type: string
        invoice_date:
          type: string
          format: date
        booking_period:
          type: integer
        printed_address:
          $ref: '#/components/schemas/PrintedAddress'
        invoice_reference:
          type: string
        processed_flag:
          type: string
        tax_amount:
          type: number
        gross_amount:
          type: number
        created_date_time:
          type: string
          format: date-time
        sequential_number:
          type: integer
          format: int32
        employee_login:
          type: string
    PrintedAddress:
      type: object
      properties:
        address_type:
          type: string
        address_number:
          type: integer
          format: int32
        line_1:
          type: string
        line_2:
          type: string
        line_3:
          type: string
        line_4:
          type: string
        line_5:
          type: string
    ContainsIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
      - type: object
        properties:
          key:
            $ref: '#/components/schemas/LookupIdentifier'
          value:
            type: string
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
    EqualsIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
      - type: object
        properties:
          key:
            $ref: '#/components/schemas/LookupIdentifier'
          value:
            type: string
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
    GreaterEqualIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - type: object
        properties:
          key:
            $ref: '#/components/schemas/LookupIdentifier'
          value:
            type: string
      - $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
    GreaterThanIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - type: object
        properties:
          key:
            $ref: '#/components/schemas/LookupIdentifier'
          value:
            type: string
      - $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
    IdentifierInvoiceIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierInvoiceIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierInvoiceIdentifier'
    IdentifierLookupIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    InIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
      - type: object
        properties:
          key:
            $ref: '#/components/schemas/LookupIdentifier'
          values:
            type: array
            items:
              type: string
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
    LessEqualIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - type: object
        properties:
          key:
            $ref: '#/components/schemas/LookupIdentifier'
          value:
            type: string
      - $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
    LessThanIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - type: object
        properties:
          key:
            $ref: '#/components/schemas/LookupIdentifier'
          value:
            type: string
      - $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
    LookupIdentifier:
      type: object
    OrIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
      - type: object
        properties:
          identifiers:
            type: array
            items:
              $ref: '#/components/schemas/IdentifierLookupIdentifier'
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        street:
          type: string
        city:
          type: string
        country:
          type: string
        disabled:
          type: boolean
        address_type:
          type: string
        address_number:
          type: integer
          format: int32
        short_name:
          type: string
        name_1:
          type: string
        name_2:
          type: string
        postal_code:
          type: string
        sensitive_address:
          type: string
    IdentifierAddressIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierAddressIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierAddressIdentifier'
    AddressQualifierMapping:
      type: object
      properties:
        id:
          type: integer
          format: int32
        qualifier:
          type: string
        direction:
          type: string
        name:
          type: string
        mode_of_transport:
          type: string
        address_location:
          type: string
    IdentifierAddressQualifierIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierAddressQualifierIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierAddressQualifierIdentifier'
    CodeConvertion:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        edipartner:
          type: string
        direction:
          type: string
        code_type:
          type: string
        source_code:
          type: string
        target_code:
          type: string
    IdentifierCodeConverterIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierCodeConverterIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierCodeConverterIdentifier'
    Country:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        code:
          type: string
        name:
          type: string
        short_name:
          type: string
        un_country_code:
          type: string
    Shipment:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        direction:
          type: string
        department:
          type: string
        numberOfGoods:
          type: integer
          format: int32
        shipment_number:
          type: string
        master_reference:
          type: string
        house_reference:
          type: string
        bl_type:
          type: string
        mode_of_transport:
          type: string
        month_of_service:
          type: string
        total_packages:
          type: integer
          format: int32
        total_gross_weight:
          type: number
    IdentifierCountryIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierCountryIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierCountryIdentifier'
    Department:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        matchcode:
          type: string
        type:
          type: string
        name:
          type: string
        cost_unit:
          type: string
    IdentifierDepartmentIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierDepartmentIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierDepartmentIdentifier'
    DocumentCategory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        matchcode:
          type: string
        name:
          type: string
        editable:
          type: boolean
        mailing:
          type: string
        transfer_scm:
          type: boolean
        transfer_office_to_office:
          type: boolean
        initial_id:
          type: integer
          format: int32
    IdentifierDocumentCategoryIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierDocumentCategoryIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierDocumentCategoryIdentifier'
    EFileSettings:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        efileActive:
          type: boolean
        efile_user:
          type: string
        efile_password:
          type: string
        efile_url:
          type: string
        connected_system:
          type: string
        use_efile:
          type: boolean
    IdentifierEFileSettingsIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierEFileSettingsIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierEFileSettingsIdentifier'
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
        language:
          type: string
        password:
          type: string
        disabled:
          type: boolean
        last_name:
          type: string
        short_name:
          type: string
        phone_number:
          type: string
        mail_address:
          type: string
        windows_login:
          type: string
        inbox_on_top:
          type: string
        inbox_default_category:
          type: string
        password_hash:
          type: string
    IdentifierEmployeeIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierEmployeeIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierEmployeeIdentifier'
    Permission:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        permission_group:
          type: integer
          format: int32
        permission_object:
          type: string
    IdentifierListIdentifierPermissionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierPermissionIdentifier'
    IdentifierPermissionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    EmployeeClientPermission:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        login:
          type: string
    IdentifierEmployeeClientPermissionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierEmployeeClientPermissionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierEmployeeClientPermissionIdentifier'
    EmployeePermission:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        office:
          type: string
        login:
          type: string
        corporation:
          type: string
        permission_group:
          type: integer
          format: int32
    IdentifierEmployeePermissionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierEmployeePermissionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierEmployeePermissionIdentifier'
    PermissionGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        corporation:
          type: string
        office:
          type: string
        description:
          type: string
        permission_group:
          type: integer
          format: int32
    IdentifierListIdentifierPermissionGroupIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierPermissionGroupIdentifier'
    IdentifierPermissionGroupIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    DynamicRule:
      type: object
      properties:
        id:
          type: integer
          format: int32
        entity:
          type: string
        field:
          type: string
        value:
          type: string
        target_entity:
          type: string
        target_entity_id:
          type: integer
          format: int32
        source_entity:
          type: string
    IdentifierDynamicRuleIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierDynamicRuleIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierDynamicRuleIdentifier'
    Sequence:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        name:
          type: string
        description:
          type: string
        sequence_number:
          type: integer
          format: int32
        valid_year:
          type: integer
          format: int32
        valid_month:
          type: integer
          format: int32
    IdentifierListIdentifierSequenceIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierSequenceIdentifier'
    IdentifierSequenceIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    CargosoftSetting:
      type: object
      properties:
        id:
          type: integer
          format: int32
        key:
          type: string
        value:
          type: string
    IdentifierCargosoftSettingIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierCargosoftSettingIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierCargosoftSettingIdentifier'
    ShipmentNumberDefinition:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        name:
          type: string
        description:
          type: string
        length:
          type: integer
          format: int32
        pattern:
          type: string
        text1:
          type: string
        text2:
          type: string
        maindepartment_start:
          type: integer
          format: int32
        maindepartment_length:
          type: integer
          format: int32
        maindepartment_divider:
          type: string
        subdepartment_start:
          type: integer
          format: int32
        subdepartment_length:
          type: integer
          format: int32
        subdepartment_divider:
          type: string
        date_start:
          type: integer
          format: int32
        date_length:
          type: integer
          format: int32
        date_format:
          type: string
        date_divider:
          type: string
        counter_start:
          type: integer
          format: int32
        counter_length:
          type: integer
          format: int32
        counter_divider:
          type: string
        subdepartment_counter_start:
          type: integer
          format: int32
        subdepartment_counter_length:
          type: integer
          format: int32
        subdepartment_counter_divider:
          type: string
        numeric_subdepartment_counter:
          type: boolean
        text1_start:
          type: integer
          format: int32
        text1_length:
          type: integer
          format: int32
        text1_divider:
          type: string
        text2_start:
          type: integer
          format: int32
        text2_length:
          type: integer
          format: int32
        text2_divider:
          type: string
        month_generation:
          type: string
    IdentifierListIdentifierShipmentNumberDefinitionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentNumberDefinitionIdentifier'
    IdentifierShipmentNumberDefinitionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    BasicTypeDTO:
      type: object
      properties:
        stringValue:
          type: object
    BasicTypeDTOString:
      type: object
      properties:
        stringValue:
          type: string
    AddressStatusSubscription:
      type: object
      properties:
        id:
          type: integer
          format: int32
        address_client:
          type: string
        address_type:
          type: string
        address_number:
          type: integer
          format: int32
        basicdata_client:
          type: string
        provider:
          type: string
        status_code:
          type: string
    IdentifierAddressStatusSubscriptionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierAddressStatusSubscriptionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierAddressStatusSubscriptionIdentifier'
    CargosoftStatusPermission:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        edipartner:
          type: string
        cargosoft_status_code:
          type: string
        single_transfer:
          type: boolean
    IdentifierCargosoftStatusPermissionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierCargosoftStatusPermissionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierCargosoftStatusPermissionIdentifier'
    CargosoftStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        cargosoft_status_code:
          type: string
        description:
          type: string
        direction:
          type: string
        status_action:
          type: string
    IdentifierCargosoftStatusIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierCargosoftStatusIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierCargosoftStatusIdentifier'
    ProviderStatusAction:
      type: object
      properties:
        id:
          type: integer
          format: int32
        direction:
          type: string
        provider_status_id:
          type: integer
          format: int32
        cargosoft_status_code:
          type: string
        mail_subject:
          type: string
        mail_text:
          type: string
        status_action:
          type: string
        mode_of_transport:
          type: string
    IdentifierListIdentifierProviderStatusActionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderStatusActionIdentifier'
    IdentifierProviderStatusActionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ProviderStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        provider:
          type: string
        status_code:
          type: string
        description:
          type: string
        department:
          type: string
        status_action:
          type: string
        cargosoft_status_code:
          type: string
    IdentifierListIdentifierProviderStatusIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderStatusIdentifier'
    IdentifierProviderStatusIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    CargoComMailReceipient:
      type: object
      properties:
        id:
          type: integer
          format: int32
        email:
          type: string
        cargocom_mail_id:
          type: integer
          format: int32
        sequential_number:
          type: integer
          format: int32
        recipient_type:
          type: string
    IdentifierCargoComMailReceipientIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierCargoComMailReceipientIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierCargoComMailReceipientIdentifier'
    CargoComMail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        subject:
          type: string
        priority:
          type: string
        send:
          type: string
        employee_login:
          type: string
        system_date:
          type: string
          format: date
        system_time:
          $ref: '#/components/schemas/LocalTime'
        mail_type:
          type: string
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    IdentifierCargoComMailIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierCargoComMailIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierCargoComMailIdentifier'
    CargoComTask:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        task:
          type: string
        code:
          type: string
        state:
          type: string
        mode:
          type: string
        language:
          type: string
        document:
          type: string
        department:
          type: string
        filenumber:
          type: string
        efile_id:
          type: integer
          format: int32
        document_category:
          type: string
        document_form:
          type: string
        employee_login:
          type: string
        system_date:
          type: string
          format: date
        system_time:
          $ref: '#/components/schemas/LocalTime'
        invoice_number:
          type: integer
          format: int64
        invoice_tyüe:
          type: string
        incoming_invoice_sequential_number:
          type: number
        reference_number:
          type: string
        cargocom_mail_id:
          type: integer
          format: int32
    IdentifierCargoComTaskIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierCargoComTaskIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierCargoComTaskIdentifier'
    Company:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        description:
          type: string
        address_client:
          type: string
        basicdata_client:
          type: string
        sensible_address:
          type: boolean
    IdentifierCompanyIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierCompanyIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierCompanyIdentifier'
    EFile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        client:
          type: string
        description:
          type: string
        bytes:
          type: string
        roles:
          type: array
          items:
            type: string
        references:
          type: array
          items:
            $ref: '#/components/schemas/EFileReference'
        document_category:
          type: integer
          format: int32
        document_name:
          type: string
        document_date:
          type: string
          format: date-time
    EFileReference:
      type: object
      properties:
        reference_type:
          type: string
        reference_value:
          type: string
    EFileRole:
      type: object
      properties:
        role:
          type: string
    IdentifierEFileIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierEFileIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierEFileIdentifier'
    AirCarriageParameter:
      type: object
      allOf:
      - $ref: '#/components/schemas/CarriageParameter'
      - type: object
        properties:
          aircraft_share:
            type: string
          aircraft_type:
            type: string
          consider_rfi_factor:
            type: boolean
          passage_utilisation:
            type: integer
            format: int32
          belly_percentage:
            type: number
          accounting_variant:
            type: string
          flight_no:
            type: string
    CarriageParameter:
      type: object
      properties:
        mot:
          type: string
          enum:
          - SEA
          - AIR
          - RD
          - RL
        load_factor:
          type: number
      discriminator:
        propertyName: mot
    EmissionCalculationRequest:
      type: object
      properties:
        request_identifier:
          type: string
        total_weight:
          type: number
        pre_carriage:
          type: array
          items:
            $ref: '#/components/schemas/TransportLeg'
        main_carriage:
          type: array
          items:
            $ref: '#/components/schemas/TransportLeg'
        post_carriage:
          type: array
          items:
            $ref: '#/components/schemas/TransportLeg'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
    Location:
      type: object
      properties:
        codes:
          type: array
          items:
            $ref: '#/components/schemas/LocationCode'
        name:
          type: string
        latitude:
          type: number
        longitude:
          type: number
    LocationCode:
      required:
      - code
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - CARGOSOFT
          - UNLOC
          - IATA
          - FOREIGN
          - POSTAL_CODE
          - UN_COUNTRY
        code:
          type: string
    RailCarriageParameter:
      type: object
      allOf:
      - $ref: '#/components/schemas/CarriageParameter'
      - type: object
        properties:
          train_weight:
            type: integer
            format: int32
          drive_class:
            type: string
          empty_run_factor:
            type: integer
            format: int32
          ferry_class:
            type: string
          ferry_routing:
            type: string
          train_type:
            type: string
          emission_class:
            type: string
          particle_filter_type:
            type: string
          shunting_type:
            type: string
    Reference:
      required:
      - reference
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - SHIPMENT_NUMBER
          - REFERENCE_NUMBER
          - BL_NUMBER
          - HOUSE_BL_NUMBER
          - BOOKING_NUMBER
          - CONTAINER_NUMBER
          - CONTAINER_ISO_CODE
          - FLIGHT_NUMBER
          - CARRIER_CODE
          - TERMINAL
          - TERMINAL_FULL_NAME
          - GOODSID
          - VESSEL
          - IMO_NUMBER
          - VESSEL_CALL_SIGN
          - CURRENCY
          - CURRENCY_VALUE
          - VOYAGE_NUMBER
          - SEAL_NUMBER
          - CLIENT
          - PROVIDER
          - HANDLING_AGENT
          - DECLARATION_TYPE
          - PUBLIC_LINK
          - RECIPIENT_NAME
          - VESSEL_FLAG
          - LONGITUDE
          - LATITUDE
        reference:
          type: string
    RoadCarriageParameter:
      type: object
      allOf:
      - $ref: '#/components/schemas/CarriageParameter'
      - type: object
        properties:
          bio_fuel_share:
            type: number
          lorry_class:
            type: string
          empty_run_factor:
            type: integer
            format: int32
          emission_class:
            type: string
          ferry_routing:
            type: string
          fuel_type:
            type: string
    SeaCarriageParameter:
      type: object
      allOf:
      - $ref: '#/components/schemas/CarriageParameter'
      - type: object
        properties:
          barge:
            type: boolean
          sea_ship_type:
            type: string
          sea_cargo_type:
            type: string
          speed_utilisation:
            type: integer
            format: int32
    TransportLeg:
      type: object
      properties:
        mot:
          type: string
          enum:
          - SEA
          - AIR
          - RD
          - RL
        origin:
          $ref: '#/components/schemas/Location'
        destination:
          $ref: '#/components/schemas/Location'
        carrierCode:
          type: string
        transportDate:
          type: string
          format: date
        carriage_parameter:
          $ref: '#/components/schemas/CarriageParameter'
    EdiTrigger:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        edipartner:
          type: string
        send:
          type: boolean
        interface_code:
          type: string
        object_id:
          type: integer
          format: int32
        object_type:
          type: string
        system_date:
          type: string
          format: date
        system_time:
          $ref: '#/components/schemas/LocalTime'
    IdentifierEdiTriggerIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierEdiTriggerIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierEdiTriggerIdentifier'
    ShipmentTrigger:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        shipmentNumber:
          type: string
        edipartner:
          type: string
        sendDate:
          type: string
          format: date
        sendTime:
          $ref: '#/components/schemas/LocalTime'
        send:
          type: boolean
    IdentifierListIdentifierShipmentTriggerIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentTriggerIdentifier'
    IdentifierShipmentTriggerIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    Logo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        filename:
          type: string
        content:
          type: string
    IdentifierListIdentifierLogoIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierLogoIdentifier'
    IdentifierLogoIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    GlobalSetting:
      type: object
      properties:
        id:
          type: integer
          format: int32
        setup_key:
          type: string
        setup_value:
          type: string
    IdentifierGlobalSettingIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierGlobalSettingIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierGlobalSettingIdentifier'
    Login:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
        hostname:
          type: string
        ip:
          type: string
        inbox_version:
          type: string
        login_date:
          type: string
          format: date-time
    IdentifierListIdentifierLoginIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierLoginIdentifier'
    IdentifierLoginIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    Uselog:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
        filename:
          type: string
        remarks:
          type: string
        file_size:
          type: integer
          format: int32
        efile_id:
          type: integer
          format: int32
        upload_duration:
          type: integer
          format: int32
        insert_mode:
          type: string
        upload_date:
          type: string
          format: date-time
        file_date:
          type: string
          format: date-time
    IdentifierListIdentifierUselogIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierUselogIdentifier'
    IdentifierUselogIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    UserSetting:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
        setup_key:
          type: string
        setup_value:
          type: string
    IdentifierListIdentifierUserSettingIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierUserSettingIdentifier'
    IdentifierUserSettingIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ThemeStyle:
      type: object
      properties:
        id:
          type: integer
          format: int32
        theme_id:
          type: integer
          format: int32
        css_key:
          type: string
        color_value:
          type: string
    IdentifierListIdentifierThemeStyleIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierThemeStyleIdentifier'
    IdentifierThemeStyleIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    Theme:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
        name:
          type: string
        code:
          type: string
        cargosoft_theme:
          type: boolean
    IdentifierListIdentifierThemeIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierThemeIdentifier'
    IdentifierThemeIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    LockedObject:
      type: object
      properties:
        id:
          type: integer
          format: int32
        workplace:
          type: string
        table:
          type: string
        employee_login:
          type: string
        date_time:
          type: string
          format: date-time
        value_1:
          type: string
        value_2:
          type: string
        value_3:
          type: string
        value_4:
          type: string
        value_5:
          type: string
        value_6:
          type: string
        value_7:
          type: string
        value_8:
          type: string
    IdentifierListIdentifierLockedObjectIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierLockedObjectIdentifier'
    IdentifierLockedObjectIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    Monitor:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        provider:
          type: string
        direction:
          type: string
        reference:
          type: string
        hashcode:
          type: string
        edipartner:
          type: string
        shipment_number:
          type: string
        reference_number:
          type: string
        object_id:
          type: integer
          format: int32
        object_type:
          type: string
        process_type:
          type: string
        interface_type:
          type: string
        process_state:
          type: string
        process_code:
          type: integer
          format: int32
        process_info:
          type: string
        creation_date:
          type: string
          format: date
        creation_time:
          $ref: '#/components/schemas/LocalTime'
        system_date:
          type: string
          format: date
        system_time:
          $ref: '#/components/schemas/LocalTime'
        employee_login:
          type: string
    IdentifierListIdentifierMonitorIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierMonitorIdentifier'
    IdentifierMonitorIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    MonitorFile:
      type: object
      properties:
        id:
          type: integer
          format: int32
        filename:
          type: string
        extension:
          type: string
        hashcode:
          type: string
        processed:
          type: boolean
        deleted:
          type: boolean
        file_size:
          type: integer
          format: int32
        file_creation_date:
          type: string
          format: date
        file_creation_time:
          $ref: '#/components/schemas/LocalTime'
    IdentifierListIdentifierMonitorFileIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierMonitorFileIdentifier'
    IdentifierMonitorFileIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    MonitorLog:
      type: object
      properties:
        id:
          type: integer
          format: int32
        source:
          type: string
        monitor_id:
          type: integer
          format: int32
        log_code:
          type: string
        log_text:
          type: string
        log_exception:
          type: string
        log_level:
          type: string
    IdentifierListIdentifierMonitorLogIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierMonitorLogIdentifier'
    IdentifierMonitorLogIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    Oceanbooking:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        branch:
          type: string
        booking_number:
          type: string
        state:
          type: string
        creation_employee_login:
          type: string
        creation_date:
          type: string
          format: date
        creation_time:
          $ref: '#/components/schemas/LocalTime'
        modified_employee_login:
          type: string
        modified_date:
          type: string
          format: date
        modified_time:
          $ref: '#/components/schemas/LocalTime'
        sent:
          type: boolean
        sent_date:
          type: string
          format: date
        sent_time:
          $ref: '#/components/schemas/LocalTime'
        cancellation:
          type: boolean
        cancellation_date:
          type: string
          format: date
        cancellation_time:
          $ref: '#/components/schemas/LocalTime'
        carrier_code:
          type: string
        service_type:
          type: string
        contract_number:
          type: string
        contract_line_number:
          type: string
        dakosy_number:
          type: string
        inttra_number:
          type: string
        vessel_name:
          type: string
        voyage_number:
          type: string
        imo_code:
          type: string
        remark1:
          type: string
        remark2:
          type: string
        carrier_booking_number:
          type: string
        shipment_number:
          type: string
        movement_type:
          type: string
    IdentifierListIdentifierOceanbookingIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierOceanbookingIdentifier'
    IdentifierOceanbookingIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ProviderStatusSend:
      type: object
      properties:
        id:
          type: integer
          format: int32
        edipartner:
          type: string
        send:
          type: boolean
        statusId:
          type: integer
          format: int32
        remark:
          type: string
        shipment_status_id:
          type: integer
          format: int32
        sent_date:
          type: string
          format: date
        sent_time:
          $ref: '#/components/schemas/LocalTime'
    IdentifierListIdentifierProviderStatusSendIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderStatusSendIdentifier'
    IdentifierProviderStatusSendIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    QMCard:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        shipment_number:
          type: string
        office_code:
          type: string
        shipment_content_1:
          type: string
        shipment_content_2:
          type: string
        shipment_content_3:
          type: string
        shipment_content_4:
          type: string
        shipment_content_5:
          type: string
        sequential_number:
          type: integer
          format: int32
    IdentifierListIdentifierQMCardIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierQMCardIdentifier'
    IdentifierQMCardIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ServiceFile:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        edipartner:
          type: string
        type:
          type: string
        direction:
          type: string
        shipment_number:
          type: string
        servicefile_number:
          type: string
        mode_of_transport:
          type: string
    IdentifierListIdentifierServiceFileIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierServiceFileIdentifier'
    IdentifierServiceFileIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierShipmentIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    IdentifierShipmentIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    AirfreightCarriage:
      type: object
      properties:
        origin:
          $ref: '#/components/schemas/CarriageLeg'
        destination:
          $ref: '#/components/schemas/CarriageLeg'
        leg_no:
          type: integer
          format: int32
        flight_no:
          type: string
        airline_awb_code:
          type: string
        airline_name:
          type: string
    CarriageLeg:
      type: object
      properties:
        location:
          $ref: '#/components/schemas/Location'
        estimated_datetime:
          $ref: '#/components/schemas/DateAndTime'
        actual_datetime:
          $ref: '#/components/schemas/DateAndTime'
    DateAndTime:
      type: object
      properties:
        date:
          type: string
          format: date
        time:
          $ref: '#/components/schemas/LocalTime'
        zone_offset:
          type: object
          properties:
            totalSeconds:
              type: integer
              format: int32
            id:
              type: string
            rules:
              type: object
              properties:
                fixedOffset:
                  type: boolean
                transitions:
                  type: array
                  items:
                    type: object
                    properties:
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      duration:
                        type: object
                        properties:
                          seconds:
                            type: integer
                            format: int64
                          nano:
                            type: integer
                            format: int32
                          negative:
                            type: boolean
                          zero:
                            type: boolean
                          units:
                            type: array
                            items:
                              type: object
                              properties:
                                dateBased:
                                  type: boolean
                                timeBased:
                                  type: boolean
                                durationEstimated:
                                  type: boolean
                      gap:
                        type: boolean
                      dateTimeBefore:
                        type: string
                        format: date-time
                      dateTimeAfter:
                        type: string
                        format: date-time
                      instant:
                        type: string
                        format: date-time
                      overlap:
                        type: boolean
                transitionRules:
                  type: array
                  items:
                    type: object
                    properties:
                      month:
                        type: string
                        enum:
                        - JANUARY
                        - FEBRUARY
                        - MARCH
                        - APRIL
                        - MAY
                        - JUNE
                        - JULY
                        - AUGUST
                        - SEPTEMBER
                        - OCTOBER
                        - NOVEMBER
                        - DECEMBER
                      timeDefinition:
                        type: string
                        enum:
                        - UTC
                        - WALL
                        - STANDARD
                      standardOffset:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      dayOfWeek:
                        type: string
                        enum:
                        - MONDAY
                        - TUESDAY
                        - WEDNESDAY
                        - THURSDAY
                        - FRIDAY
                        - SATURDAY
                        - SUNDAY
                      dayOfMonthIndicator:
                        type: integer
                        format: int32
                      localTime:
                        $ref: '#/components/schemas/LocalTime'
                      midnightEndOfDay:
                        type: boolean
    SeafreightCarriage:
      type: object
      properties:
        origin:
          $ref: '#/components/schemas/CarriageLeg'
        destination:
          $ref: '#/components/schemas/CarriageLeg'
        leg_no:
          type: integer
          format: int32
        voyage_no:
          type: string
        imo_code:
          type: string
        vessel_name:
          type: string
        vessel_flag:
          type: string
        call_sign:
          type: string
    ShipmentAddress:
      type: object
      properties:
        qualifier:
          type: string
          enum:
          - A1
          - A2
          - A3
          - A4
          - A5
          - A6
          - A7
          - A8
          - A9
          - AGT
          - CAR
          - CNE
          - CUS
          - DEL
          - DEP
          - DL1
          - DL2
          - INV
          - MIS
          - NFY
          - PUP
          - SHP
          - TRA
        shipment_id:
          type: integer
          format: int32
        bl_type:
          type: string
          enum:
          - MASTER
          - HOUSE
        address_type:
          type: string
        address_number:
          type: integer
          format: int32
        line_1:
          type: string
        line_2:
          type: string
        line_3:
          type: string
        line_4:
          type: string
        line_5:
          type: string
    ShipmentConsolidation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        shipment_number_main:
          type: string
        shipment_number_sub:
          type: string
        counter:
          type: integer
          format: int32
        container_number:
          type: string
    IdentifierListIdentifierShipmentConsolidationIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentConsolidationIdentifier'
    IdentifierShipmentConsolidationIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    TruckManifest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        manifest_number:
          type: string
        employee_login:
          type: string
        branch:
          type: string
        print_date:
          type: string
          format: date-time
        driver_name1:
          type: string
        driver_name2:
          type: string
        license_plate:
          type: string
        trip_naumber:
          type: string
        sent:
          type: boolean
        sent_date:
          type: string
          format: date
        sent_time:
          $ref: '#/components/schemas/LocalTime'
        from_airport:
          type: string
        from_location:
          type: string
        to_airport:
          type: string
        to_location:
          type: string
        seal_number1:
          type: string
        seal_number2:
          type: string
        pickup_date:
          type: string
          format: date
        delivery_date:
          type: string
          format: date
        type:
          type: string
        edipartner:
          type: string
    IdentifierListIdentifierTruckManifestIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierTruckManifestIdentifier'
    IdentifierTruckManifestIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ShipmentEvent:
      type: object
      properties:
        event:
          type: string
          enum:
          - DISPATCH
          - PICKUP
          - WAREHOUSE
          - POL_ARRIVAL
          - LOADING_START
          - LOADING_END
          - POL_DEPARTURE
          - POD_ARRIVAL
          - CLEARANCE_START
          - CLEARANCE_END
          - CUSTOMS_CLEARANCE
          - AVAILABLE
          - ACCEPTANCE
          - FINAL_DESTINATION
          - TRANSSHIPMENT
          - GATE_OUT
          - POD_DEPARTURE
          - CUSTOMS_RELEASE
          - DELIVERY_DATE
        type:
          type: string
          enum:
          - ACTUAL
          - ESTIMATED
        shipment_id:
          type: integer
          format: int32
        date_time:
          $ref: '#/components/schemas/DateAndTime'
        location:
          $ref: '#/components/schemas/Location'
    Container:
      type: object
      properties:
        id:
          type: integer
          format: int32
        good_id:
          type: integer
          format: int32
        client:
          type: string
        shipment_number:
          type: string
        container_number:
          type: string
        seal_number1:
          type: string
        seal_number2:
          type: string
        seal_number3:
          type: string
        container_iso_code:
          type: string
        shippers_own:
          type: boolean
    IdentifierContainerIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierContainerIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierContainerIdentifier'
    Good:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        shipment_number:
          type: string
        identifier:
          type: string
        counter:
          type: integer
          format: int32
        level:
          type: integer
          format: int32
        level_number:
          type: integer
          format: int32
        mark:
          type: string
        quantity:
          type: integer
          format: int32
        packaging_code:
          type: string
        description:
          type: string
        weight:
          type: number
        colli:
          type: boolean
        colli_number:
          type: integer
          format: int32
        cubic_meter:
          type: number
        additional_mark:
          type: boolean
        net_weight:
          type: number
        weight_unit:
          type: string
        chargable_weight:
          type: number
        container_number:
          type: string
    IdentifierGoodIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierGoodIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierGoodIdentifier'
    ShipmentStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        shipment_number:
          type: string
        cargosoft_status_code:
          type: string
        counter:
          type: integer
          format: int32
        employee_login:
          type: string
        status_date:
          type: string
          format: date
        status_time:
          $ref: '#/components/schemas/LocalTime'
        remark:
          type: string
        estimated_status_date:
          type: string
          format: date
        estimated_status_time:
          $ref: '#/components/schemas/LocalTime'
        latest_shipment_status:
          type: boolean
        level:
          type: string
        reference:
          type: string
        from_location:
          type: string
        to_location:
          type: string
        status_location:
          type: string
        system_date:
          type: string
          format: date
        system_time:
          $ref: '#/components/schemas/LocalTime'
        history:
          type: boolean
        source:
          type: string
        reference_number:
          type: string
        container_number:
          type: string
        modified_date:
          type: string
          format: date
        modified_time:
          $ref: '#/components/schemas/LocalTime'
        reference_type:
          type: string
    IdentifierListIdentifierShipmentStatusIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentStatusIdentifier'
    IdentifierShipmentStatusIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ShipmentProviderStatusLink:
      type: object
      properties:
        id:
          type: integer
          format: int32
        shipment_provider_status_id:
          type: integer
          format: int32
        shipment_status_id:
          type: integer
          format: int32
    IdentifierListIdentifierShipmentProviderStatusLinkIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentProviderStatusLinkIdentifier'
    IdentifierShipmentProviderStatusLinkIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ShipmentProviderStatusReference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        shipment_provider_status_id:
          type: integer
          format: int32
        reference_type:
          type: string
        reference:
          type: string
    IdentifierListIdentifierShipmentProviderStatusReferenceIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentProviderStatusReferenceIdentifier'
    IdentifierShipmentProviderStatusReferenceIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ShipmentProviderStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        shipment_number:
          type: string
        reference_number:
          type: string
        provider:
          type: string
        status_date:
          type: string
          format: date
        status_time:
          $ref: '#/components/schemas/LocalTime'
        bl_number:
          type: string
        house_bl_number:
          type: string
        booking_number:
          type: string
        container_number:
          type: string
        flight_number:
          type: string
        status_code:
          type: string
        description:
          type: string
        cargosoft_status_code:
          type: string
        carrier_code:
          type: string
        terminal:
          type: string
        status_location:
          type: string
        status_location_name:
          type: string
        from_location:
          type: string
        from_location_name:
          type: string
        from_location_date:
          type: string
          format: date
        from_location_time:
          $ref: '#/components/schemas/LocalTime'
        to_location:
          type: string
        to_location_name:
          type: string
        to_location_date:
          type: string
          format: date
        o_location_time:
          $ref: '#/components/schemas/LocalTime'
        weight:
          type: number
        weight_unit:
          type: string
        information_text:
          type: string
        message_number:
          type: string
        shipment_status_request_id:
          type: integer
          format: int32
        monitor_id:
          type: integer
          format: int32
        monitor_file_id:
          type: integer
          format: int32
        system_date:
          type: string
          format: date
        system_time:
          $ref: '#/components/schemas/LocalTime'
    IdentifierListIdentifierShipmentProviderStatusIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentProviderStatusIdentifier'
    IdentifierShipmentProviderStatusIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ShipmentStatusRequest:
      type: object
      properties:
        direction:
          type: string
        id:
          type: integer
          format: int32
        edi_partner:
          type: string
        client:
          type: string
        shipment_number:
          type: string
        reference_number:
          type: string
        provider:
          type: string
        provider_number:
          type: string
        mode_of_transport:
          type: string
        container_number:
          type: string
        bl_number:
          type: string
        house_bl_number:
          type: string
        booking_number:
          type: string
        sent:
          type: boolean
        sent_date:
          type: string
          format: date
        sent_time:
          $ref: '#/components/schemas/LocalTime'
        message_number:
          type: string
        receiver_state:
          type: boolean
        receive_date:
          type: string
          format: date
        receive_time:
          $ref: '#/components/schemas/LocalTime'
        receiver_error_message:
          type: string
        cancellation:
          type: boolean
        cancellation_date:
          type: string
          format: date
        cancellation_time:
          $ref: '#/components/schemas/LocalTime'
        cancellation_message_number:
          type: string
        cancellation_state:
          type: boolean
        cancellation_receive_date:
          type: string
          format: date
        cancellation_receive_time:
          $ref: '#/components/schemas/LocalTime'
        cancellation_receiver_error_message:
          type: string
        source_number:
          type: string
        port:
          type: string
        sender_code:
          type: string
        receiver_code:
          type: string
    IdentifierListIdentifierShipmentStatusRequestIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentStatusRequestIdentifier'
    IdentifierShipmentStatusRequestIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ProviderResponseStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionStatusAdditional'
        cs_status:
          type: string
        provider_status:
          type: string
        status_date_and_time:
          $ref: '#/components/schemas/DateAndTime'
        status_location:
          $ref: '#/components/schemas/Location'
        additional_information:
          type: string
        unique_provider_message_number:
          type: string
        status_events:
          type: array
          items:
            $ref: '#/components/schemas/ProviderResponseStatusEvent'
    ProviderResponseStatusEvent:
      required:
      - date_and_time
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - FROM
          - TO
          - STATUS
          - EVENT
        date_and_time:
          $ref: '#/components/schemas/DateAndTime'
        event_date_type:
          type: string
          enum:
          - ACTUAL
          - ESTIMATED
        location:
          $ref: '#/components/schemas/Location'
    SubscriptionStatusAdditional:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    TenderOffer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        client:
          type: string
        respondent:
          type: string
        comment:
          type: string
        year:
          type: string
        date:
          type: string
          format: date
        address_type:
          type: string
        address_number:
          type: integer
          format: int32
        sequential_number:
          type: integer
          format: int32
        remark_1:
          type: string
        remark_2:
          type: string
        remark_3:
          type: string
        remark_4:
          type: string
        remark_5:
          type: string
    IdentifierListIdentifierTenderOfferIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierTenderOfferIdentifier'
    IdentifierTenderOfferIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    Jwt:
      type: object
      properties:
        token:
          type: string
    Blob:
      type: object
      properties:
        id:
          type: integer
          format: int32
        filename:
          type: string
        created:
          type: string
          format: date-time
        content:
          type: string
    ApiPermission:
      type: object
      properties:
        id:
          type: integer
          format: int32
        http_method:
          type: string
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - HEAD
          - OPTIONS
        resource_path:
          type: string
        qualified_java_method_name:
          type: string
    ApiPermissionGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/ApiPermission'
    IdentifierApiPermissionGroupIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierApiPermissionGroupIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierApiPermissionGroupIdentifier'
    IdentifierApiPermissionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierApiPermissionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierApiPermissionIdentifier'
    ApiRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          type: string
        uuid:
          type: string
        path:
          type: string
        method:
          type: string
        media_type:
          type: string
        request_date_time:
          type: string
          format: date-time
        query_parameter:
          type: array
          items:
            $ref: '#/components/schemas/ApiRequestQueryParameter'
        api_blob_id:
          type: integer
          format: int32
        api_response:
          $ref: '#/components/schemas/ApiResponse'
    ApiRequestQueryParameter:
      type: object
      properties:
        id:
          type: integer
          format: int32
        key:
          type: string
        value:
          type: string
    ApiResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: integer
          format: int32
        family:
          type: string
        reason:
          type: string
        media_type:
          type: string
        response_date_time:
          type: string
          format: date-time
        api_blob_id:
          type: integer
          format: int32
    IdentifierApiRequestIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierApiRequestIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierApiRequestIdentifier'
    IdentifierApiResponseIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierApiResponseIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierApiResponseIdentifier'
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    IdentifierListIdentifierRoleIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierRoleIdentifier'
    IdentifierRoleIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        permissionGroups:
          type: array
          items:
            $ref: '#/components/schemas/ApiPermissionGroup'
    IdentifierListIdentifierUserIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierUserIdentifier'
    IdentifierUserIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    WebhookConfig:
      type: object
      properties:
        id:
          type: integer
          format: int32
        path:
          type: string
        user_id:
          type: integer
          format: int32
    IdentifierListIdentifierWebhookConfigIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierWebhookConfigIdentifier'
    IdentifierWebhookConfigIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    Attachment:
      required:
      - base_64_content
      - file_name
      type: object
      properties:
        base_64_content:
          type: string
        file_name:
          type: string
    Email:
      required:
      - content
      - contentType
      - receiver
      - subject
      type: object
      properties:
        receiver:
          type: array
          items:
            type: string
        contentType:
          type: string
          enum:
          - HTML
          - PLAIN
        subject:
          type: string
        content:
          type: string
        receiver_cc:
          type: array
          items:
            type: string
        receiver_bcc:
          type: array
          items:
            type: string
        high_priority:
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    ProviderForeignCode:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code_type:
          type: string
        cs_code:
          type: string
        foreign_code:
          type: string
        provider_id:
          type: integer
          format: int32
    IdentifierForeignCodeIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierForeignCodeIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierForeignCodeIdentifier'
    Provider:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/ProviderConfig'
        foreign_codes:
          type: array
          items:
            $ref: '#/components/schemas/ProviderForeignCode'
    ProviderConfig:
      required:
      - provider_id
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        active:
          type: boolean
        provider_id:
          type: integer
          format: int32
        suppress_duplicate_notifies:
          type: boolean
        notify_on_response:
          type: boolean
        additional_properties:
          type: array
          items:
            $ref: '#/components/schemas/ProviderConfigAdditional'
        foreign_codes:
          type: array
          items:
            $ref: '#/components/schemas/ProviderConfigForeignCode'
    ProviderConfigAdditional:
      required:
      - provider_config_id
      type: object
      properties:
        id:
          type: integer
          format: int32
        key:
          type: string
        value:
          type: string
        provider_config_id:
          type: integer
          format: int32
    ProviderConfigForeignCode:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code_type:
          type: string
        cs_code:
          type: string
        foreign_code:
          type: string
        provider_config_id:
          type: integer
          format: int32
    IdentifierListIdentifierProviderIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderIdentifier'
    IdentifierProviderIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    SubscriptionIdentifier:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    SubscriptionRequest:
      type: object
      properties:
        provider:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionIdentifier'
        webhook_url:
          type: string
        configuration_name:
          type: string
        tms_object_id:
          type: integer
          format: int32
    Subscription:
      type: object
      properties:
        status:
          type: string
          enum:
          - INFORMATIONAL
          - SUCCESSFUL
          - REDIRECTION
          - CLIENT_ERROR
          - SERVER_ERROR
          - OTHER
        messages:
          type: array
          items:
            type: string
        status_code:
          type: integer
          format: int32
        provider_reference:
          type: string
        cargosoft_reference:
          type: string
        subscription_datetime:
          type: string
          format: date-time
    SubscriptionInformation:
      type: object
      properties:
        provider:
          type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionIdentifier'
        configuration_name:
          type: string
        cargosoft_reference:
          type: string
        provider_reference:
          type: string
        webhook_url:
          type: string
    IdentifierListIdentifierProviderConfigAdditionalIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderConfigAdditionalIdentifier'
    IdentifierProviderConfigAdditionalIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierProviderConfigIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderConfigIdentifier'
    IdentifierProviderConfigIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ProviderRequestMatchIdentifier:
      type: object
      properties:
        id:
          type: integer
          format: int32
        identifier_name:
          type: string
        provider_config_id:
          type: integer
          format: int32
        match_mode:
          type: string
          enum:
          - AND
          - OR
    IdentifierListIdentifierLookupIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierLookupIdentifier'
    ProviderRequest:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
        id:
          type: integer
          format: int32
        request_datetime:
          type: string
          format: date-time
        response_code:
          type: integer
          format: int32
        response_family:
          type: string
          enum:
          - INFORMATIONAL
          - SUCCESSFUL
          - REDIRECTION
          - CLIENT_ERROR
          - SERVER_ERROR
          - OTHER
        provider_config_id:
          type: integer
          format: int32
        provider_subscription_id:
          type: integer
          format: int32
        api_blob_id_request:
          type: integer
          format: int32
        api_blob_id_response:
          type: integer
          format: int32
        provider_request_function:
          type: string
          enum:
          - CREATE
          - UPDATE
          - DELETE
        user_subscription_request_id:
          type: integer
          format: int32
    IdentifierListIdentifierProviderRequestIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderRequestIdentifier'
    IdentifierProviderRequestIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ProviderResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        response_date_time:
          type: string
          format: date-time
        api_blob_id:
          type: integer
          format: int32
        provider_subscription_id:
          type: integer
          format: int32
        provider_response_status:
          type: array
          items:
            $ref: '#/components/schemas/ProviderResponseStatus'
    IdentifierListIdentifierProviderResponseIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderResponseIdentifier'
    IdentifierProviderResponseIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierProviderResponseStatusIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderResponseStatusIdentifier'
    IdentifierProviderResponseStatusIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ProviderStatusNotify:
      type: object
      properties:
        id:
          type: integer
          format: int32
        notify_datetime:
          type: string
          format: date-time
        provider_response_status_id:
          type: integer
          format: int32
        api_blob_id:
          type: integer
          format: int32
        response_family:
          type: string
          enum:
          - INFORMATIONAL
          - SUCCESSFUL
          - REDIRECTION
          - CLIENT_ERROR
          - SERVER_ERROR
          - OTHER
        response_code:
          type: integer
          format: int32
        user_subscription_id:
          type: integer
          format: int32
    ProviderSubscription:
      type: object
      properties:
        id:
          type: integer
          format: int32
        subscription_datetime:
          type: string
          format: date-time
        canceled:
          type: boolean
        provider_reference:
          type: string
        provider_config_id:
          type: integer
          format: int32
        user_subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/UserSubscription'
        provider_requests:
          type: array
          items:
            $ref: '#/components/schemas/ProviderRequest'
        provider_response:
          type: array
          items:
            $ref: '#/components/schemas/ProviderResponse'
    UserSubscription:
      type: object
      properties:
        id:
          type: integer
          format: int32
        subscription_datetime:
          type: string
          format: date-time
        webhook_url:
          type: string
        active:
          type: boolean
        tms_object_id:
          type: integer
          format: int32
        provider_subscription_id:
          type: integer
          format: int32
        user_id:
          type: integer
          format: int32
        user_subscription_requests:
          type: array
          items:
            $ref: '#/components/schemas/UserSubscriptionRequest'
        provider_status_notify:
          type: array
          items:
            $ref: '#/components/schemas/ProviderStatusNotify'
    UserSubscriptionRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        subscrption_function:
          type: string
          enum:
          - CREATE
          - UPDATE
          - DELETE
        subscription_request_datetime:
          type: string
          format: date-time
        provider_config_id:
          type: integer
          format: int32
        provider_request_id:
          type: integer
          format: int32
        api_request:
          $ref: '#/components/schemas/ApiRequest'
        api_response:
          $ref: '#/components/schemas/ApiResponse'
        user_subscription_id:
          type: integer
          format: int32
        user_subscription_request_data:
          type: array
          items:
            $ref: '#/components/schemas/UserSubscriptionRequestData'
    UserSubscriptionRequestData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        key:
          type: string
        value:
          type: string
        user_subscription_request_id:
          type: integer
          format: int32
    IdentifierListIdentifierProviderSubscriptionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderSubscriptionIdentifier'
    IdentifierProviderSubscriptionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    IdentifierListIdentifierUserSubscriptionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierUserSubscriptionIdentifier'
    IdentifierUserSubscriptionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
    ProviderTransaction:
      type: object
      properties:
        provider:
          type: string
        id:
          type: integer
          format: int32
        transaction_date:
          $ref: '#/components/schemas/DateAndTime'
        provider_config:
          type: string
        provider_subscription_id:
          type: integer
          format: int32
        transaction_additionals:
          type: array
          items:
            $ref: '#/components/schemas/ProviderTransactionAdditional'
    ProviderTransactionAdditional:
      type: object
      properties:
        id:
          type: integer
          format: int32
        key:
          type: string
        value:
          type: string
    IdentifierListIdentifierProviderTransactionIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierProviderTransactionIdentifier'
    IdentifierProviderTransactionIdentifier:
      type: object
      properties:
        match_mode:
          type: string
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
      discriminator:
        propertyName: match_mode
  securitySchemes:
    Java Web Token:
      type: http
      scheme: bearer
      bearerFormat: JWT
