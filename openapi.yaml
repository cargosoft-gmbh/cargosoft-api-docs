openapi: 3.0.1
info:
  title: CargoSoft API
  description: 
    $ref: ./resources/api_info_description.md
  contact:
    name: Uwe Droste
    url: https://www.cargosoft.de
    email: support@cargosoft.de
  version: '2021.4'
  x-logo:
    backgroundColor: '#FFFFF'
    altText: CargoSoft GmbH
    url: https://raw.githubusercontent.com/cargosoft-gmbh/cargosoft-api-docs/2021.4/resources/CargoSoftLogo.jpg
servers:
- url: https://api-demo.cargosoft.de
  description: Test CargoSoft API server.
  variables: {}
tags:
- name: Shipment
  description: The following chapter will give you an overview about the shipment
    endpoints and their function.
paths:
  /cargosoft/shipment/lookup:
    post:
      tags:
      - Shipment
      summary: Lookup for shipments
      description: This endpoint looks up for shipments. The result should be limit
        by using search criterias in the request body. For a complete list of search
        criteria see the ShipmentIdentifier enumeration. Depending on the search criteria
        you will receive zero up to n shipments.
      operationId: lookup
      parameters:
      - name: page_no
        in: query
        description: The page number for pagination.
        schema:
          type: integer
          format: int32
          default: 0
      - name: page_size
        in: query
        description: The page size for pagination.
        schema:
          type: integer
          format: int32
          default: 50
      - name: order_by
        in: query
        description: The order by criteria for ordering API results sending back as
          response.
        schema:
          type: array
          items:
            type: string
            description: The following list will give an overview about the implemented
              shipment identifier and a short description.
            enum:
            - ID
            - HBL
            - MBL
            - FILENUMBER
            - SHIPMENT_ID
            - ADDRESS_REFERENCE
            - DIRECTION
            - MODE_OF_TRANSPORT
            - MONTH_OF_SERVICE
            - CLIENT
            - CREATION_DATE
            - RUNNING_SEQUENCE_NUMBER
            x-enumDescriptions:
              SHIPMENT_ID: A foreign shipment ID of a third party system. This ID
                should be unique.
              HBL: House bl number
              MBL: Master BL number
              ADDRESS_REFERENCE: TBD
              RUNNING_SEQUENCE_NUMBER: TBD
              DIRECTION: "Direction of the shipment. Possible values are [I, E]. I\
                \ = import shipments, E = export shipments"
              MONTH_OF_SERVICE: TBD
              CREATION_DATE: System date when the shipment was created.
              ID: Unique database ID of the Shipment.
              MODE_OF_TRANSPORT: "The mode of the shipment. Possible values are [SEA,\
                \ AIR, RD, RL]"
              FILENUMBER: Shipment number. The shipment number is unique in combination
                with the client.
              CLIENT: The CargoSoft client.
      - name: order_mode
        in: query
        description: The order mode for ordering API results sending back as response.
        schema:
          type: array
          items:
            type: string
            description: Description of the order mode for ordering API results sending
              back as response
            enum:
            - ASC
            - DESC
            x-enumDescriptions:
              ASC: ascending
              DESC: descending
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                anyOf:
                - $ref: '#/components/schemas/EqualsIdentifier'
                - $ref: '#/components/schemas/ContainsIdentifier'
                - $ref: '#/components/schemas/InIdentifier'
            examples:
              LookupShipmentIdentifierExample:
                summary: Example of looking up shipment
                description: TBD
                $ref: ./resources/Lookup_shipment_example.yaml
      responses:
        "200":
          description: Records found
          headers:
            X-Page-Count:
              description: The total number of pages.
              required: true
              style: simple
              schema:
                type: integer
            X-Row-Count:
              description: The total number of found objects.
              required: true
              style: simple
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shipment'
              examples:
                ShipmentExample:
                  summary: Example of a shipment
                  description: TBD
                  $ref: ./resources/Shipment_example_object.yaml
      security:
      - JavaWebToken: []
  /cargosoft/shipment/{id}/events:
    get:
      tags:
      - Shipment
      summary: Retrieve shipment events
      description: "This endpoint retrieves all events of the shipment. To retrieves\
        \ the events, the shipment id is needed. It is possible that not all events\
        \ are included in the response because they are not entered or know in the\
        \ shipment unitil now. To retrive the shipment id, use the lookup endpoint\
        \ of this chapter."
      operationId: retrieveEvents
      parameters:
      - name: id
        in: path
        description: The shipment id.
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Records found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentEvent'
              examples:
                ShipmentEventExample:
                  summary: Example of shipment events
                  description: TBD
                  $ref: ./resources/Retrieve_shipment_events_example.yaml
      security:
      - JavaWebToken: []
  /auth/token:
    post:
      tags:
      - Authorization
      summary: Retrieve JWT
      description: Retrieve a Java Web Token to authenticate against the API
      operationId: retrieveAuthToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - password
              - username
              type: object
              properties:
                username:
                  type: string
                  description: Your username
                password:
                  type: string
                  description: Your password
      responses:
        "200":
          description: Java Web Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jwt'
        "401":
          description: Wrong username and/or password
components:
  schemas:
    Shipment:
      type: object
      properties:
        id:
          type: integer
          description: The id of the Shipment.
          format: int32
        client:
          type: string
          description: The CargoSoft client.
        direction:
          type: string
          description: The shipment direction.
        department:
          type: string
          description: The shipment office.
        numberOfGoods:
          type: integer
          format: int32
        shipment_number:
          type: string
          description: The shipment number of the shipment. This number may unique
            in combination of the client property.
        master_reference:
          type: string
          description: The shipment master BL number.
        house_reference:
          type: string
          description: The shipment house BL number.
        bl_type:
          type: string
          description: BL type of the shipment.
        mode_of_transport:
          type: string
          description: Transport mode of the shipment.
        month_of_service:
          type: string
          description: The shipment direction.
        total_packages:
          type: integer
          description: The total number of packages of the shipment.
          format: int32
        total_gross_weight:
          type: number
          description: The gross weight if the shipment.
      description: Description of the Shipment DTO shema.
    ContainsIdentifier:
      type: object
      description: Contains Identifier
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          value:
            type: string
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    EqualsIdentifier:
      type: object
      description: Equals Identifier
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          value:
            type: string
            description: The value of the Identifier
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    GreaterEqualIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - type: object
        properties:
          value:
            type: string
      - $ref: '#/components/schemas/Identifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    GreaterThanIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - type: object
        properties:
          value:
            type: string
      - $ref: '#/components/schemas/Identifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    Identifier:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/LookupIdentifier'
        match_mode:
          type: string
          description: The following list will give an overview about the match modes.
          default: EQUALS
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
          x-enumDescriptions:
            OR: Or.
            EQUALS: Equals.
            IN: In.
            LT: Lower than.
            LE: Lower equals
            CONTAINS: Contains
            GT: Greater than.
            GE: Greater equals
      description: Description of the Identifier DTO schema. This DTO contains the
        match mode and identifiers of a functional object for instance the shipment
        identifier.
      discriminator:
        propertyName: matchMode
        mapping:
          EqualsIdentifierMapped: '#/components/schemas/EqualsIdentifier'
          ContainsIdentifierMapped: '#/components/schemas/ContainsIdentifier'
          InIdentifierMapped: '#/components/schemas/InIdentifier'
          OrIdentifierMapped: '#/components/schemas/OrIdentifier'
          GreaterThanIdentifierMapped: '#/components/schemas/GreaterThanIdentifier'
          LessThanIdentifierMapped: '#/components/schemas/LessThanIdentifier'
          GreaterEqualIdentifierMapped: '#/components/schemas/GreaterEqualIdentifier'
          LessEqualIdentifierMapped: '#/components/schemas/LessEqualIdentifier'
    IdentifierLookupIdentifier:
      type: object
      properties:
        key:
          $ref: '#/components/schemas/LookupIdentifier'
        match_mode:
          type: string
          description: The following list will give an overview about the match modes.
          default: EQUALS
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
          x-enumDescriptions:
            OR: Or.
            EQUALS: Equals.
            IN: In.
            LT: Lower than.
            LE: Lower equals
            CONTAINS: Contains
            GT: Greater than.
            GE: Greater equals
      description: Description of the Identifier DTO schema. This DTO contains the
        match mode and identifiers of a functional object for instance the shipment
        identifier.
      discriminator:
        propertyName: matchMode
        mapping:
          EqualsIdentifierMapped: '#/components/schemas/EqualsIdentifier'
          ContainsIdentifierMapped: '#/components/schemas/ContainsIdentifier'
          InIdentifierMapped: '#/components/schemas/InIdentifier'
          OrIdentifierMapped: '#/components/schemas/OrIdentifier'
          GreaterThanIdentifierMapped: '#/components/schemas/GreaterThanIdentifier'
          LessThanIdentifierMapped: '#/components/schemas/LessThanIdentifier'
          GreaterEqualIdentifierMapped: '#/components/schemas/GreaterEqualIdentifier'
          LessEqualIdentifierMapped: '#/components/schemas/LessEqualIdentifier'
    InIdentifier:
      type: object
      description: InIdentifier
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          values:
            type: array
            description: A list of values of the Identifier
            items:
              type: string
              description: A list of values of the Identifier
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    LessEqualIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - type: object
        properties:
          value:
            type: string
      - $ref: '#/components/schemas/Identifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    LessThanIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - type: object
        properties:
          value:
            type: string
      - $ref: '#/components/schemas/Identifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    LookupIdentifier:
      type: object
    OrIdentifier:
      type: object
      allOf:
      - $ref: '#/components/schemas/Identifier'
      - type: object
        properties:
          identifiers:
            type: array
            items:
              $ref: '#/components/schemas/IdentifierLookupIdentifier'
      - $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    IdentifierListIdentifierShipmentIdentifier:
      type: array
      items:
        $ref: '#/components/schemas/IdentifierShipmentIdentifier'
    IdentifierShipmentIdentifier:
      type: object
      properties:
        key:
          type: string
          description: The following list will give an overview about the implemented
            shipment identifier and a short description.
          enum:
          - ID
          - HBL
          - MBL
          - FILENUMBER
          - SHIPMENT_ID
          - ADDRESS_REFERENCE
          - DIRECTION
          - MODE_OF_TRANSPORT
          - MONTH_OF_SERVICE
          - CLIENT
          - CREATION_DATE
          - RUNNING_SEQUENCE_NUMBER
          x-enumDescriptions:
            SHIPMENT_ID: A foreign shipment ID of a third party system. This ID should
              be unique.
            HBL: House bl number
            MBL: Master BL number
            ADDRESS_REFERENCE: TBD
            RUNNING_SEQUENCE_NUMBER: TBD
            DIRECTION: "Direction of the shipment. Possible values are [I, E]. I =\
              \ import shipments, E = export shipments"
            MONTH_OF_SERVICE: TBD
            CREATION_DATE: System date when the shipment was created.
            ID: Unique database ID of the Shipment.
            MODE_OF_TRANSPORT: "The mode of the shipment. Possible values are [SEA,\
              \ AIR, RD, RL]"
            FILENUMBER: Shipment number. The shipment number is unique in combination
              with the client.
            CLIENT: The CargoSoft client.
        match_mode:
          type: string
          description: The following list will give an overview about the match modes.
          default: EQUALS
          enum:
          - EQUALS
          - CONTAINS
          - IN
          - OR
          - GT
          - LT
          - GE
          - LE
          x-enumDescriptions:
            OR: Or.
            EQUALS: Equals.
            IN: In.
            LT: Lower than.
            LE: Lower equals
            CONTAINS: Contains
            GT: Greater than.
            GE: Greater equals
      description: Description of the Identifier DTO schema. This DTO contains the
        match mode and identifiers of a functional object for instance the shipment
        identifier.
      discriminator:
        propertyName: matchMode
        mapping:
          EqualsIdentifierMapped: '#/components/schemas/EqualsIdentifier'
          ContainsIdentifierMapped: '#/components/schemas/ContainsIdentifier'
          InIdentifierMapped: '#/components/schemas/InIdentifier'
          OrIdentifierMapped: '#/components/schemas/OrIdentifier'
          GreaterThanIdentifierMapped: '#/components/schemas/GreaterThanIdentifier'
          LessThanIdentifierMapped: '#/components/schemas/LessThanIdentifier'
          GreaterEqualIdentifierMapped: '#/components/schemas/GreaterEqualIdentifier'
          LessEqualIdentifierMapped: '#/components/schemas/LessEqualIdentifier'
    DateAndTime:
      type: object
      properties:
        date:
          type: string
          description: The date.
          format: date
        time:
          $ref: '#/components/schemas/LocalTime'
        zone_offset:
          type: object
          properties:
            totalSeconds:
              type: integer
              format: int32
            id:
              type: string
            rules:
              type: object
              properties:
                fixedOffset:
                  type: boolean
                transitions:
                  type: array
                  items:
                    type: object
                    properties:
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      duration:
                        type: object
                        properties:
                          seconds:
                            type: integer
                            format: int64
                          nano:
                            type: integer
                            format: int32
                          negative:
                            type: boolean
                          zero:
                            type: boolean
                          units:
                            type: array
                            items:
                              type: object
                              properties:
                                dateBased:
                                  type: boolean
                                timeBased:
                                  type: boolean
                                durationEstimated:
                                  type: boolean
                      gap:
                        type: boolean
                      dateTimeBefore:
                        type: string
                        format: date-time
                      dateTimeAfter:
                        type: string
                        format: date-time
                      instant:
                        type: string
                        format: date-time
                      overlap:
                        type: boolean
                transitionRules:
                  type: array
                  items:
                    type: object
                    properties:
                      month:
                        type: string
                        enum:
                        - JANUARY
                        - FEBRUARY
                        - MARCH
                        - APRIL
                        - MAY
                        - JUNE
                        - JULY
                        - AUGUST
                        - SEPTEMBER
                        - OCTOBER
                        - NOVEMBER
                        - DECEMBER
                      timeDefinition:
                        type: string
                        enum:
                        - UTC
                        - WALL
                        - STANDARD
                      standardOffset:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      dayOfWeek:
                        type: string
                        enum:
                        - MONDAY
                        - TUESDAY
                        - WEDNESDAY
                        - THURSDAY
                        - FRIDAY
                        - SATURDAY
                        - SUNDAY
                      dayOfMonthIndicator:
                        type: integer
                        format: int32
                      localTime:
                        $ref: '#/components/schemas/LocalTime'
                      midnightEndOfDay:
                        type: boolean
          description: The time zone of this date and time.
          format: ISO-8601
      description: The date and time of this event.
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    Location:
      type: object
      properties:
        codes:
          type: array
          description: A list of all location codes and their types of this location.
          items:
            $ref: '#/components/schemas/LocationCode'
        name:
          type: string
          description: The written name of this location.
        latitude:
          type: number
          description: The latitude of this location.
        longitude:
          type: number
          description: The longitude of this location.
      description: Description of the Location DTO schema.
    LocationCode:
      required:
      - code
      - type
      type: object
      properties:
        type:
          type: string
          description: The following list will give an overview about the types of
            a location.
          enum:
          - CARGOSOFT
          - UNLOC
          - IATA
          - FOREIGN
          - POSTAL_CODE
          - UN_COUNTRY
          x-enumDescriptions:
            FOREIGN: Foreign location code of a third party system.
            UNLOC: The location code is an UN location code.
            IATA: The location code is an IATA location code.
            CARGOSOFT: The location code is a CargoSoft internal defined location
              code.
            UN_COUNTRY: The location code is an UN country code.
        code:
          type: string
          description: The code of this location.
      description: Description of the LocationCode DTO schema. Each location in CargoSoft
        can be describe by serveral location types and codes.
    ShipmentEvent:
      type: object
      properties:
        event:
          type: string
          description: The following list will give an overview about the shipment
            events and a short description.
          enum:
          - DISPATCH
          - PICKUP
          - WAREHOUSE
          - POL_ARRIVAL
          - LOADING_START
          - LOADING_END
          - POL_DEPARTURE
          - POD_ARRIVAL
          - CLEARANCE_START
          - CLEARANCE_END
          - CUSTOMS_CLEARANCE
          - AVAILABLE
          - ACCEPTANCE
          - FINAL_DESTINATION
          - TRANSSHIPMENT
          - GATE_OUT
          - POD_DEPARTURE
          - CUSTOMS_RELEASE
          - DELIVERY_DATE
          x-enumDescriptions:
            GATE_OUT: TBD.
            WAREHOUSE: The goods are within the warehouse.
            CLEARANCE_END: The goods are cleared.
            FINAL_DESTINATION: The goods are at the final destination.
            TRANSSHIPMENT: The  goods  are  at  the  transshipment port (seafreight
              only).
            DISPATCH: The goods were dispatched.
            LOADING_START: The goods will be loaded into the vessel / airplane.
            CUSTOMS_RELEASE: TBD.
            LOADING_END: The goods are loaded into the vessel airplane.
            POL_ARRIVAL: The goods arrived the port of loading.
            CUSTOMS_CLEARANCE: The goods are cleared by customs.
            AVAILABLE: The goods are available at the port.
            POD_DEPARTURE: TBD.
            POL_DEPARTURE: The  goods  are  departured  (ETD  and ATD).
            DELIVERY_DATE: TBD.
            POD_ARRIVAL: The goods arrived at the port of discharge (ETA and ATA).
            ACCEPTANCE: The goods can be picked up at the port.
            PICKUP: The  goods  are  picked  up  from  the starting location.
            CLEARANCE_START: The goods will be cleared.
        type:
          type: string
          description: The following list will give an overview about the event types
            and a short description.
          enum:
          - ACTUAL
          - ESTIMATED
          x-enumDescriptions:
            ESTIMATED: Estimated date and time
            ACTUAL: Actual date and time.
        shipment_id:
          type: integer
          description: The id of the Shipment.
          format: int32
        date_time:
          $ref: '#/components/schemas/DateAndTime'
        location:
          $ref: '#/components/schemas/Location'
      description: Description of the ShipmentEvent DTO schema.
    Jwt:
      type: object
      properties:
        token:
          type: string
  securitySchemes:
    JavaWebToken:
      type: http
      description: 
        $ref: ./resources/api_security_description.md
      scheme: bearer
      bearerFormat: JWT
